<project name="build-props">
  <property name="rhn-home" location="." />

  <property environment="env" />

  <property file="${user.home}/.rhn.properties" />
  <property name="custom.log4j" location="${user.home}/.log4j.properties" />
  <property name="src.dir" location="${rhn-home}/code" />
  <property name="build.dir" location="${rhn-home}/build" />
  <property name="lib.dir" location="${rhn-home}/lib" />
  <property name="build.lib.dir" location="${build.dir}/build-lib" />

  <property name="run.lib.dir" location="${build.dir}/run-lib" />
  <property name="run-external.lib.dir" location="${build.dir}/run-lib/external" />
  <property name="test.lib.dir" location="${build.dir}/test-lib" />
  <property name="boot.lib.dir" location="${build.dir}/boot-lib" />
  <property name="report.dir" location="${build.dir}/reports" />
  <property name="javadoc.deploydir" location="/usr/share/javadoc/rhn-java" />
  <property name="build.instrument.dir" location="${build.dir}/instrumented" />
  <property name="taskomatic.link.dir" location="/usr/share/spacewalk/taskomatic" />

  <property name="eclipse.lib.dirs" location="${lib.dir}" />
  <property name="system.lib.dir" location="/usr/share/java" />

  <property name="log4j.threshold" value="warn" />
  <property name="rhn.checkout.dir" value="" />
  <property name="halt-tests-on-failure" value="false" />
  <property name="checkstyle.header.file" value="${rhn-home}/buildconf/LICENSE.txt" />
  <property name="checkstyle.cache.src" value="${rhn-home}/build/checkstyle.cache.src" />
  <property name="checkstyle.cache.test" value="${rhn-home}/build/checkstyle.cache.test" />
  <property name="coverage.out.file" value="${rhn-home}/coverage.ec" />
  <property name="javadoc.lazy" value="false" />
  <property name="deprecation" value="off" />
  <property name="nowarn" value="!${deprecation}" />
  <property name="includehelp" value="true" />

  <!-- IVY Properties -->
  <property name="ivy.log.module.when.found" value="false"/>
  <property name="ivy.log.resolved.revision" value="false"/>
  <property name="ivy.dep.file" value="${rhn-home}/buildconf/ivy/ivy-suse.xml" />
  <property name="ivy.settings.file" value="${rhn-home}/buildconf/ivy/ivyconf.xml" />

  <!-- END IVY Properties -->

  <property name="rhn.war" value="${build.dir}/webapp/rhnjava.war"/>
  <property name="megajar.jar" value="${run.lib.dir}/rhn.jar" />
  <property name="testjar.jar" value="${run.lib.dir}/rhn-test.jar" />

  <property name="build.rhn.conf" value="${basedir}/conf/rhn/rhn.conf"/>
  <property name="build.webapp.conf" value="${basedir}/conf/httpd/webapp.conf"/>
  <property name="git.home" location="${basedir}/../"/>

  <!-- =================== jar dependencies ======================= -->
  <property name="commons-lang" value="commons-lang3"/>

  <available file="${java.lib.dir}/hibernate/hibernate-commons-annotations.jar" type="file"
	  property="hibernate-commons-annotations" value="hibernate/hibernate-commons-annotations"/>
  <available file="${java.lib.dir}/hibernate-commons-annotations/hibernate-commons-annotations.jar" type="file"
	  property="hibernate-commons-annotations" value="hibernate-commons-annotations/hibernate-commons-annotations"/>
  <available file="${java.lib.dir}/hibernate-commons-annotations.jar" type="file"
	  property="hibernate-commons-annotations" value="hibernate-commons-annotations" />

  <condition property="commons-validator" value="apache-commons-validator" else="commons-validator">
    <available file="${java.lib.dir}/apache-commons-validator.jar" />
  </condition>

  <available file="${java.lib.dir}/log4j-1.jar" type="file" property="log4j-jars" value="log4j-1" />
  <available file="${java.lib.dir}/log4j12/log4j-12.jar" type="file" property="log4j-jars" value="log4j12/log4j-12" />
  <available file="${java.lib.dir}/log4j.jar" type="file" property="log4j-jars" value="log4j" />

  <condition property="jta11-jars" value="geronimo-jta-1.1-api" else="jta">
    <available file="${java.lib.dir}/geronimo-jta-1.1-api.jar" />
  </condition>

  <condition property="javamail" value="javax.mail" else="javamail">
    <available file="${java.lib.dir}/javax.mail.jar" />
  </condition>

  <available file="${java.lib.dir}/ehcache.jar" type="file" property="ehcache" value="ehcache" />
  <available file="${java.lib.dir}/ehcache-core.jar" type="file" property="ehcache" value="ehcache-core" />

  <property name="hibernate3.2deps" value="hibernate3"/>

  <property name="hibernate3.6deps" value="hibernate3/hibernate-ehcache-3 hibernate3/hibernate-c3p0-3 hibernate3/hibernate-core-3 ${hibernate-commons-annotations} slf4j/api jboss-logging javassist slf4j/log4j12 ${ehcache} hibernate-jpa-2.0-api"/>

  <property name="hibernate5deps" value="hibernate-ehcache-5 hibernate-c3p0-5 hibernate-core-5 ${hibernate-commons-annotations} slf4j/api jakarta-persistence-api byte-buddy jboss-logging javassist slf4j/log4j12 ${ehcache} classmate statistics"/>

  <available file="${java.lib.dir}/hibernate3.jar" type="file" property="hibernate" value="${hibernate3.2deps}" />
  <available file="${java.lib.dir}/hibernate3/hibernate-core-3.jar" type="file" property="hibernate" value="${hibernate3.6deps}" />
  <available file="${java.lib.dir}/hibernate-core-5.jar" type="file" property="hibernate" value="${hibernate5deps}" />

  <condition property="jmock-jars"
                value="jmock jmock-cglib"
                 else="">
    <available file="${java.lib.dir}/jmock/jmock.jar" />
  </condition>

  <available file="${java.lib.dir}/cglib/cglib.jar" type="file" property="cglib-jar" value="cglib/cglib" />
  <available file="${java.lib.dir}/cglib.jar" type="file" property="cglib-jar" value="cglib" />

  <property name="boot.jar.dependencies" value="ivy" />

  <property name="common.jar.dependencies"
      value="bcel ${cglib-jar} commons-beanutils commons-cli commons-codec
             commons-collections commons-digester commons-discovery
             commons-el commons-fileupload commons-io ${commons-lang} commons-logging ${commons-validator} ${hibernate}
             ${javamail} smtp jdom ${jmock-jars}
             ${log4j-jars} oro redstone-xmlrpc-client redstone-xmlrpc ${struts-jars} ${tomcat-jars}
             bcprov bcpg jcommon stringtree-json postgresql-jdbc
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             logdriver quartz dwr slf4j-api slf4j-log4j12
             concurrent velocity simple-core  mockobjects mockobjects-core mockobjects-jdk1.4-j2ee1.3 strutstest" />

  <!-- deps needed for testing, but required to build -->
  <property name="test.build.jar.dependencies"
      value="junit commons-lang
             ${log4j-jars}
             regexp ${jmock-jars} postgresql-jdbc" />

  <property name="test.jar.dependencies"
      value="antlr checkstyle dom4j emma emma_ant jdom ${jta11-jars} junit
             ${log4j-jars}
             regexp ${jmock-jars}
             postgresql-jdbc" />

  <condition property="ant-contrib.path" value="ant/ant-contrib" else="ant-contrib">
      <available file="${java.lib.dir}/ant/ant-contrib.jar"/>
  </condition>

  <property name="build.jar.dependencies"
      value="ant ant-junit ${ant-contrib.path} antlr  ${test.build.jar.dependencies}
      ${common.jar.dependencies} ${tomcat-jars} ${jasper-jars}
       concurrent xalan-j2" />

  <property name="run.jar.dependencies"
      value="antlr objectweb-asm/asm ${cglib-jar} c3p0 commons-discovery dom4j jaf ${jta11-jars} ojdbc14 sitemesh
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             xalan-j2 xalan-j2-serializer xerces-j2 ${common.jar.dependencies}" />

  <!-- =================== RPM build, use jpackage syntax ======================= -->
  <!-- property name="install.test.jar.dependencies"
      value="antlr checkstyle dom4j emma emma_ant jdom ${jta11-jars} junit
             ${log4j-jars} mockobjects mockobjects-core mockobjects-jdk1.4-j2ee1.3
             regexp ${jmock-jars} strutstest" / -->

  <!-- SUSE extra dependencies: build and runtime -->
  <property name="suse-common-jars" value="jade4j jose4j salt-netapi-client spark-core spark-template-jade httpasyncclient simpleclient simpleclient_common simpleclient_servlet simpleclient_httpserver pgjdbc-ng spy netty-common netty-buffer netty-resolver netty-transport netty-codec netty-handler netty-transport-native-unix-common java-saml java-saml-core joda-time woodstox-core-asl xmlsec stax2-api stax-api commons-jexl ical4j ${product-common-jars}" />

  <!-- SUSE extra dependencies: runtime only -->
  <property name="suse-runtime-jars" value="${commons-lang} concurrentlinkedhashmap-lru
    slf4j/api slf4j/log4j12 ${product-runtime-jars}" />

  <property name="install.build.jar.dependencies"
      value="ant ant/ant-junit ${ant-contrib.path} antlr ${jasper-jars} ${test.build.jar.dependencies}
      ${install.common.jar.dependencies} xalan-j2" />

  <property name="install.run.jar.dependencies"
      value="antlr objectweb-asm/asm ${cglib-jar} c3p0 commons-discovery dom4j dwr jaf ${jta11-jars} sitemesh
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             xalan-j2 xalan-j2-serializer xerces-j2 ${install.common.jar.dependencies}" />

  <property name="install.common.jar.dependencies"
      value="bcel ${cglib-jar} commons-beanutils commons-cli commons-codec
             commons-collections commons-digester commons-discovery
             commons-el commons-fileupload commons-io ${commons-lang} commons-logging ${commons-validator} ${hibernate}
             ${tomcat-jars} ${javamail} jdom jsch dwr
             ${log4j-jars} oro redstone-xmlrpc-client redstone-xmlrpc ${struts-jars}
             jcommon stringtree-json postgresql-jdbc
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec quartz
             ${suse-common-jars} velocity
             concurrent simple-core snakeyaml simple-xml commons-jexl " />

  <property name="dist.jar.dependencies"
      value="antlr objectweb-asm/asm bcel c3p0 ${cglib-jar}
             commons-collections commons-beanutils commons-cli commons-codec
             commons-digester commons-discovery commons-el commons-fileupload commons-io
             ${commons-lang} commons-logging
             ${commons-validator} concurrent dom4j ${hibernate} ${jta11-jars}
             jaf ${jasper-jars} ${javamail} jcommon jdom ${other-jars}
             ${tomcat-jars} ${log4j-jars} redstone-xmlrpc-client redstone-xmlrpc
             oro quartz stringtree-json sitemesh ${struts-jars}
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             postgresql-jdbc snakeyaml simple-xml
             ${suse-common-jars} ${suse-runtime-jars}
	     xalan-j2 xalan-j2-serializer xerces-j2 simple-core ${ehcache}" />

  <property name="taskomatic.jar.dependencies"
      value="${dist.jar.dependencies} jsch" />

  <path id="bootjars">
    <fileset dir="${boot.lib.dir}" includes="*.jar" />
  </path>

  <path id="testjars">
    <fileset dir="${test.lib.dir}" includes="*.jar" />
  </path>

  <path id="runjars">
    <fileset dir="${run.lib.dir}" includes="**/*.jar" />
  </path>

  <path id="buildjars">
    <path refid="testjars" />
    <fileset dir="${build.lib.dir}">
      <include name="*.jar" />
    </fileset>
        <pathelement location="${build.dir}/classes/"/>
  </path>

  <path id="alljars">
    <path refid="buildjars" />
    <path refid="runjars" />
  </path>

  <!-- =================== Deployment Properties ======================= -->
  <!-- Used for war deployment -->
  <property name="catalina.hostname" value="localhost" />
  <property name="catalina.port"     value="8080" />
  <property name="catalina.username" value="rhndev" />
  <property name="catalina.password" value="spacewalk" />
  <property name="rhnapp"            value="rhn" />
  <!-- Used for local dir deployment -->
  <property name="webapp.basedir"    value="${rhn-home}" />
  <property name="webapp.name"       value="rhnwebapp" />
  <property name="webapp.dir"        value="${webapp.basedir}/${webapp.name}" />

</project>
