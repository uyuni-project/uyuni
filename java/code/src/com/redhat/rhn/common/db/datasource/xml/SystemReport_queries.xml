<!--
  ~ Copyright (c) 2022 SUSE LLC
  ~
  ~ This software is licensed to you under the GNU General Public License,
  ~ version 2 (GPLv2). There is NO WARRANTY for this software, express or
  ~ implied, including the implied warranties of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
  ~ along with this software; if not, see
  ~ http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
  ~
  ~ Red Hat trademarks are not licensed under GPLv2. No permission is
  ~ granted to use or replicate Red Hat trademarks that are incorporated
  ~ in this software or its documentation.
  -->
<datasource_modes>

<mode name="System" class="">
  <query params="offset, limit">
        SELECT rhnserver.id AS system_id
                    , rhnserver.name AS profile_name
                    , rhnserver.hostname
                    , suseminioninfo.minion_id
                    , suseminioninfo.os_family AS minion_os_family
                    , suseminioninfo.kernel_live_version AS minion_kernel_live_version
                    , rhnserver.machine_id
                    , web_contact.login AS registered_by
                    , rhnserver.created AS registration_time
                    , rhnserverinfo.checkin AS last_checkin_time
                    , rhnserver.running_kernel AS kernel_version
                    , rhnserverarch.name AS architecture
                    , rhnproxyinfo.server_id IS NOT NULL AS is_proxy
                    , rhnserverpath.proxy_server_id AS proxy_system_id
                    , susemgrserverinfo.server_id IS NOT NULL AS is_mgr_server
                    , web_customer.name AS organization
                    , get_hw_info_as_clob(rhnserver.id, '; ') AS hardware
                    , rhnserverlocation.machine
                    , rhnserverlocation.rack
                    , rhnserverlocation.room
                    , rhnserverlocation.building
                    , rhnserverlocation.address1
                    , rhnserverlocation.address2
                    , rhnserverlocation.city
                    , rhnserverlocation.state
                    , rhnserverlocation.country
        FROM rhnserver
                    LEFT JOIN suseminioninfo ON rhnserver.id = suseminioninfo.server_id
                    LEFT JOIN web_contact ON rhnserver.creator_id = web_contact.id
                    LEFT JOIN rhnserverinfo ON  rhnserver.id = rhnserverinfo.server_id
                    LEFT JOIN rhnserverlocation ON rhnserver.id = rhnserverlocation.server_id
                    LEFT JOIN rhnproxyinfo ON rhnserver.id = rhnproxyinfo.server_id
                    LEFT JOIN susemgrserverinfo ON rhnserver.id = susemgrserverinfo.server_id
                    LEFT JOIN rhnserverpath ON rhnserver.id = rhnserverpath.server_id
                    INNER JOIN rhnserverarch ON rhnserver.server_arch_id = rhnserverarch.id
                    INNER JOIN web_customer ON rhnserver.org_id = web_customer.id
        ORDER BY system_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemConfigChannel" class="">
    <query params="offset, limit">
          SELECT rhnserverconfigchannel.server_id AS system_id
                    , rhnserverconfigchannel.config_channel_id
                    , rhnconfigchannel.name
                    , rhnserverconfigchannel.position
            FROM rhnserverconfigchannel
                    INNER JOIN rhnconfigchannel ON rhnserverconfigchannel.config_channel_id = rhnconfigchannel.id
        ORDER BY system_id, config_channel_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemEntitlement" class="">
    <query params="offset, limit">
          SELECT rhnservergroupmembers.server_id AS system_id
                    , rhnservergroupmembers.server_group_id AS system_group_id
                    , rhnservergroup.name
                    , rhnservergroup.description
                    , rhnservergroup.group_type
                    , rhnservergrouptype.name AS group_type_name
                    , rhnservergroup.current_members
                    , web_customer.name AS organization
            FROM rhnservergroupmembers
                    INNER JOIN rhnservergroup ON rhnservergroupmembers.server_group_id = rhnservergroup.id
                    INNER JOIN web_customer ON rhnservergroup.org_id = web_customer.id
                    INNER JOIN rhnservergrouptype ON rhnservergroup.group_type = rhnservergrouptype.id
           WHERE rhnservergroup.group_type IS NOT NULL
        ORDER BY system_id, server_group_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemGroupMember" class="">
    <query params="offset, limit">
          SELECT rhnservergroupmembers.server_id AS system_id
                    , rhnservergroupmembers.server_group_id AS system_group_id
                    , rhnservergroup.name AS group_name
                    , rhnserver.name AS system_name
            FROM rhnservergroupmembers
                    INNER JOIN rhnserver ON rhnservergroupmembers.server_id = rhnserver.id
                    INNER JOIN rhnservergroup ON rhnservergroupmembers.server_group_id = rhnservergroup.id
           WHERE rhnservergroup.group_type IS NULL
        ORDER BY server_id, server_group_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemNetInterface" class="">
    <query params="offset, limit">
          SELECT server_id AS system_id
                    , id AS interface_id
                    , name
                    , hw_addr AS hardware_address
                    , module
                    , COALESCE(is_primary, 'N') = 'Y' AS primary_interface
            FROM rhnservernetinterface
        ORDER BY system_id, interface_id OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="SystemNetAddressV4" class="">
    <query params="offset, limit">
          SELECT rhnservernetinterface.server_id AS system_id
                    , rhnservernetinterface.id AS interface_id
                    , rhnservernetaddress4.address
                    , rhnservernetaddress4.netmask
                    , rhnservernetaddress4.broadcast
            FROM rhnservernetinterface
                    INNER JOIN rhnservernetaddress4 ON rhnservernetinterface.id = rhnservernetaddress4.interface_id
        ORDER BY system_id, interface_id, address OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="SystemNetAddressV6" class="">
    <query params="offset, limit">
          SELECT rhnservernetinterface.server_id AS system_id
                    , rhnservernetinterface.id AS interface_id
                    , rhnservernetaddress6.address
                    , rhnservernetaddress6.netmask
                    , rhnservernetaddress6.scope
            FROM rhnservernetinterface
                    INNER JOIN rhnservernetaddress6 ON rhnservernetinterface.id = rhnservernetaddress6.interface_id
        ORDER BY system_id, interface_id, address OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="SystemVirtualData" class="">
    <query params="offset, limit">
          SELECT rhnvirtualinstance.id AS instance_id
                    , rhnvirtualinstance.host_system_id
                    , rhnvirtualinstance.virtual_system_id
                    , rhnvirtualinstanceinfo.name
                    , rhnvirtualinstancetype.name AS instance_type_name
                    , rhnvirtualinstanceinfo.vcpus
                    , rhnvirtualinstanceinfo.memory_size
                    , rhnvirtualinstance.uuid
                    , rhnvirtualinstance.confirmed
                    , rhnvirtualinstancestate.name AS state_name
            FROM rhnvirtualinstance
                    INNER JOIN rhnvirtualinstanceinfo ON rhnvirtualinstance.id = rhnvirtualinstanceinfo.instance_id
                    INNER JOIN rhnvirtualinstancetype ON rhnvirtualinstanceinfo.instance_type = rhnvirtualinstancetype.id
                    INNER JOIN rhnvirtualinstancestate ON rhnvirtualinstanceinfo.state = rhnvirtualinstancestate.id
        ORDER BY host_system_id, virtual_system_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemChannel" class="">
    <query params="offset, limit">
          SELECT rhnserverchannel.server_id AS system_id
                    , rhnserverchannel.channel_id
                    , rhnchannel.name
                    , rhnchannel.description
                    , rhnchannelarch.name AS architecture_name
                    , rhnchannel.parent_channel AS parent_channel_id
                    , rhnparentchannel.name AS parent_channel_name
            FROM rhnserverchannel
                    INNER JOIN rhnchannel ON rhnserverchannel.channel_id=rhnchannel.id
                    INNER JOIN rhnchannelarch ON rhnchannel.channel_arch_id=rhnchannelarch.id
                    LEFT JOIN rhnchannel rhnparentchannel ON rhnchannel.parent_channel=rhnparentchannel.id
        ORDER BY system_id, channel_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemOutdated" class="">
    <query params="offset, limit">
          SELECT rhnserverneededcache.server_id AS system_id
                    , count(distinct rhnpackage.name_id) AS packages_out_of_date
                    , count(distinct rhnserverneededcache.errata_id) AS errata_out_of_date
            FROM rhnpackage, rhnserverneededcache
           WHERE rhnserverneededcache.package_id = rhnpackage.id
        GROUP BY rhnserverneededcache.server_id
        ORDER BY system_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemAction" class="">
    <query params="offset, limit">
          WITH action_errata AS (
            SELECT rhnactionerrataupdate.action_id, rhnerrata.advisory
              FROM rhnactionerrataupdate
                        INNER JOIN rhnerrata ON rhnactionerrataupdate.errata_id = rhnerrata.id
          ), action_package AS (
            SELECT rhnactionpackage.action_id
                      , CONCAT(rhnpackagename.name, '-' || evr_t_as_vre_simple(rhnpackageevr.evr), '.' || rhnpackagearch.label) AS package_name
             FROM rhnactionpackage
                      INNER JOIN rhnpackagename ON rhnactionpackage.name_id = rhnpackagename.id
                      LEFT JOIN rhnpackageevr ON rhnactionpackage.evr_id = rhnpackageevr.id
                      LEFT JOIN rhnpackagearch ON rhnactionpackage.package_arch_id = rhnpackagearch.id
          ), action_configfiles AS (
            SELECT rhnactionconfigrevision.action_id, rhnactionconfigrevision.server_id, rhnconfigfilename.path
              FROM rhnactionconfigrevision
                      LEFT JOIN rhnconfigrevision ON rhnactionconfigrevision.config_revision_id = rhnconfigrevision.id
                      LEFT JOIN rhnconfigfile ON rhnconfigrevision.config_file_id = rhnconfigfile.id
                      LEFT JOIN rhnconfigfilename ON rhnconfigfile.config_file_name_id = rhnconfigfilename.id
          ), action_ksdata AS (
            SELECT DISTINCT rhnkickstartsessionhistory.action_id, rhnksdata.label
              FROM rhnkickstartsessionhistory
                      INNER JOIN rhnkickstartsession ON rhnkickstartsessionhistory.kickstart_session_id = rhnkickstartsession.id
                      INNER JOIN rhnksdata ON rhnkickstartsession.kickstart_id = rhnksdata.id
          ), action_xccdtestresult AS (
            SELECT rhnactionscap.action_id, rhnxccdftestresult.server_id, rhnxccdftestresult.identifier
              FROM rhnactionscap
                      LEFT JOIN rhnxccdftestresult ON rhnxccdftestresult.action_scap_id = rhnactionscap.id
          )
          SELECT rhnserveraction.server_id AS system_id
                      , rhnserveraction.action_id
                      , rhnserver.hostname
                      , web_contact.id AS scheduler_id
                      , web_contact.login AS scheduler_username
                      , rhnaction.earliest_action
                      , rhnaction.archived = 1 AS archived
                      , rhnserveraction.pickup_time
                      , rhnserveraction.completion_time
                      , rhnaction.name AS action_name
                      , rhnactionstatus.name AS status
                      , case
                          when rhnactiontype.name = 'Package Install' and exists (SELECT 1 FROM rhnactionpackage WHERE rhnactionpackage.action_id = rhnserveraction.action_id AND rhnactionpackage.parameter = 'upgrade' ) then 'Package Upgrade'
                          else rhnactiontype.name
                        end as event
                      , case
                          when rhnactiontype.name = 'Patch Update' then (
                              SELECT string_agg(action_errata.advisory, ';')
                                FROM action_errata
                              WHERE action_errata.action_id = rhnserveraction.action_id
                          )
                          when rhnactiontype.name in ( 'Package Install', 'Package Removal', 'Verify deployed packages' ) then (
                              SELECT string_agg(action_package.package_name, ';')
                                FROM action_package
                               WHERE action_package.action_id = rhnserveraction.action_id
                          )
                          when rhnactiontype.label like 'configfiles.%' then (
                              SELECT string_agg(action_configfiles.path, ';')
                                FROM action_configfiles
                               WHERE action_configfiles.action_id = rhnserveraction.action_id AND action_configfiles.server_id = rhnserveraction.server_id
                          )
                          when rhnactiontype.label = 'kickstart.initiate' then (
                              SELECT string_agg(action_ksdata.label, ';')
                                FROM action_ksdata
                               WHERE action_ksdata.action_id = rhnserveraction.action_id
                          )
                          when rhnactiontype.label = 'scap.xccdf_eval' then action_xccdtestresult.identifier
                        end as event_data
            FROM rhnserveraction
                      LEFT JOIN rhnserver ON rhnserveraction.server_id = rhnserver.id
                      LEFT JOIN rhnaction ON rhnserveraction.action_id = rhnaction.id
                      LEFT JOIN web_contact ON rhnaction.scheduler = web_contact.id
                      LEFT JOIN rhnactionstatus ON rhnserveraction.status = rhnactionstatus.id
                      LEFT JOIN rhnactiontype ON rhnaction.action_type = rhnactiontype.id
                      LEFT JOIN action_xccdtestresult ON action_xccdtestresult.server_id = rhnserveraction.server_id AND action_xccdtestresult.action_id = rhnserveraction.action_id
        ORDER BY system_id, action_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemHistory" class="">
    <query params="offset, limit">
          SELECT rhnserverhistory.server_id AS system_id
                      , rhnserverhistory.id as history_id
                      , rhnserver.hostname
                      , case
                          when rhnserverhistory.summary like 'subscribed to channel %' then 'Subscribed to channel'
                          when rhnserverhistory.summary like 'unsubscribed from channel %' then 'Unsubscribed from channel'
                          when rhnserverhistory.summary like 'Updated system release %' then 'Updated system release'
                          else trim(upper(substr(rhnserverhistory.summary, 1, 1)) || substr(rhnserverhistory.summary, 2))
                        end AS event
                      , case
                          when summary in ( 'added system entitlement ', 'removed system entitlement ') then details
                          when summary like 'subscribed to channel %' then details
                          when summary like 'unsubscribed from channel %' then details
                          when summary like 'Updated system release %' then substr(summary, 24)
                        end AS event_data
                      , greatest(rhnserverhistory.created, rhnserverhistory.modified) AS event_time

            FROM rhnserverhistory
                      LEFT JOIN rhnserver ON rhnserverhistory.server_id = rhnserver.id
        ORDER BY rhnserverhistory.id OFFSET :offset LIMIT :limit
</query>
</mode>

<mode name="SystemErrata" class="">
    <query params="offset, limit">
          SELECT rhnserverneedederratacache.server_id AS system_id
                      , rhnserverneedederratacache.errata_id
                      , rhnserver.hostname
                      , rhnerrata.advisory_name
                      , rhnerrata.advisory_type
            FROM rhnserverneedederratacache
                      INNER JOIN rhnserver ON rhnserverneedederratacache.server_id = rhnserver.id
                      INNER JOIN rhnerrata ON rhnserverneedederratacache.errata_id = rhnerrata.id
        ORDER BY system_id, errata_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="SystemPackageInstalled" class="">
    <query params="offset, limit">
          SELECT rhnServerPackage.server_id AS system_id
                    , rhnPackageName.name
                    , rhnPackageEvr.epoch
                    , rhnPackageEvr.version
                    , rhnPackageEvr.release
                    , rhnPackageArch.label AS arch
                    , rhnPackageEvr.type
            FROM rhnServerPackage
                    INNER JOIN rhnPackageName ON rhnServerPackage.name_id = rhnPackageName.id
                    INNER JOIN rhnPackageEvr ON rhnServerPackage.evr_id = rhnPackageEvr.id
                    INNER JOIN rhnPackageArch ON rhnServerPackage.package_arch_id = rhnPackageArch.id
        ORDER BY system_id, name OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="SystemPackageUpdate" class="">
    <query params="offset, limit">
          WITH latest AS (
            SELECT rhnserverneededcache.server_id
                      , rhnPackage.name_id
                      , MAX(rhnPackageEvr.evr) AS evr
              FROM rhnserverneededcache
                      INNER JOIN rhnPackage ON rhnserverneededcache.package_id = rhnPackage.id
                      INNER JOIN rhnPackageEvr on rhnPackage.evr_id = rhnPackageEvr.id
              GROUP BY rhnserverneededcache.server_id
                      , rhnPackage.name_id
          )
          SELECT DISTINCT rhnserverneededcache.server_id AS system_id
                    , rhnserverneededcache.package_id
                    , rhnpackagename.name
                    , rhnpackageevr.epoch
                    , rhnpackageevr.version
                    , rhnpackageevr.release
                    , rhnpackagearch.label AS arch
                    , rhnpackageevr.type
                    , rhnpackageevr.evr = latest.evr AS is_latest
            FROM rhnserverneededcache
                    INNER JOIN rhnpackage ON rhnserverneededcache.package_id = rhnpackage.id
                    INNER JOIN rhnpackageevr ON rhnpackage.evr_id = rhnpackageevr.id
                    INNER JOIN rhnpackagename ON rhnpackage.name_id = rhnpackagename.id
                    INNER JOIN rhnpackagearch ON rhnpackage.package_arch_id = rhnpackagearch.id
                    INNER JOIN latest ON (latest.server_id = rhnserverneededcache.server_id AND latest.name_id = rhnpackage.name_id)
        ORDER BY system_id, name, package_id OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="SystemCustomInfo" class="">
    <query params="offset, limit">
          SELECT rhnserver.id AS system_id
                    , web_customer.name AS organization
                    , rhncustomdatakey.label AS key
                    , rhncustomdatakey.description
                    , rhnservercustomdatavalue.value
            FROM rhnserver
                    INNER JOIN web_customer ON rhnserver.org_id = web_customer.id
                    INNER JOIN rhnservercustomdatavalue ON rhnserver.id = rhnservercustomdatavalue.server_id
                    INNER JOIN rhncustomdatakey ON rhnservercustomdatavalue.key_id = rhncustomdatakey.id
        ORDER BY organization, system_id, key OFFSET :offset LIMIT :limit
    </query>
</mode>

</datasource_modes>
