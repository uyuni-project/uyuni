<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
        <class name="com.redhat.rhn.domain.action.server.ServerAction"
                   table="rhnServerAction" >

        <composite-id>
                        <key-property name="serverId" column="server_id"/>
            <key-many-to-one
                 name="parentAction"
                 class="com.redhat.rhn.domain.action.Action"
                 column="action_id"/>
        </composite-id>

        <property name="resultCode" column="result_code" type="long" />
        <property name="resultMsg" column="result_msg" type="string"/>
        <property name="pickupTime" column="pickup_time" type="timestamp" />
        <property name="completionTime" column="completion_time" type="timestamp" />
        <property name="created" type="timestamp" insert="false" update="false" />
        <property name="modified" type="timestamp" insert="false" update="false" />
        <property name="remainingTries" column="remaining_tries" type="long" />
        <many-to-one name="status"
            class="com.redhat.rhn.domain.action.ActionStatus"
            column="status" />

                <!-- we do this so that we don't have to load the whole server object as a key which is very expensive
                                this is the reason for insert="false" update="false" -->
            <many-to-one
            name="server"
            class="com.redhat.rhn.domain.server.Server"
            column="server_id" insert="false" update="false"/>

        </class>
        <query name="ServerAction.findPendingActionsForServer">
           <![CDATA[from com.redhat.rhn.domain.action.server.ServerAction as sa where sa.server.id = :serverId and sa.parentAction.actionType.label = :label
                        and status in ( 0, 1 )]]>
        </query>

        <query name="ServerAction.findByServer">
           <![CDATA[from com.redhat.rhn.domain.action.server.ServerAction as sa where sa.server = :server
                        ]]>
        </query>

        <!--
            The explicit cast in this query is needed since the postgresql jdbc driver is not able to define the type.
            See more info at https://bit.ly/3Gh3Ez5
         -->
        <query name="ServerAction.findByServerAndActionTypeAndCreatedDate">
            <![CDATA[from com.redhat.rhn.domain.action.server.ServerAction as sa
                    where sa.server = :server
                                and (cast(:actionType as string) is null or sa.parentAction.actionType.name = :actionType)
                                and (cast(:date as date) is null or sa.created >= :date)
                        ]]>
        </query>

        <query name="ServerAction.findByServerAndAction">
           <![CDATA[from com.redhat.rhn.domain.action.server.ServerAction as sa
                    where sa.server = :server
                      and sa.parentAction = :action]]>
        </query>

        <query name="ServerAction.findByServerAndStatus">
            <![CDATA[from com.redhat.rhn.domain.action.server.ServerAction as sa
             where sa.server = :server and sa.status in (:statusList)
                            ]]>
        </query>
        <query name="ServerAction.findByServerAndStatusAndCreatedDate">
            <![CDATA[from com.redhat.rhn.domain.action.server.ServerAction as sa
                 where sa.server = :server and sa.created >= :date and sa.status in (:statusList)
                                ]]>
        </query>

</hibernate-mapping>
