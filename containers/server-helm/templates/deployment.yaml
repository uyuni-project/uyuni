apiVersion: apps/v1
kind: Deployment
metadata:
  name: uyuni
  namespace: "{{ .Release.Namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uyuni
  template:
    metadata:
      labels:
        app: uyuni
    spec:
      initContainers:
{{- if not .Values.migration }}
      - name: init-etc-tls
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/pki/tls /mnt;
            chmod --reference=/etc/pki/tls /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/pki/tls/. /mnt;
              ln -s /etc/pki/spacewalk-tls/spacewalk.crt /mnt/certs/spacewalk.crt;
              ln -s /etc/pki/spacewalk-tls/spacewalk.key /mnt/private/spacewalk.key;
              cp /etc/pki/spacewalk-tls/spacewalk.key /mnt/private/pg-spacewalk.key;
              chown postgres:postgres /mnt/private/pg-spacewalk.key;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-tls
          - name: tls-key
            mountPath: /etc/pki/spacewalk-tls
{{- end }}
      - name: init-var-cobbler
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/var/lib/cobbler /mnt;
            chmod --reference=/var/lib/cobbler /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /var/lib/cobbler/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: var-cobbler
      - name: init-var-salt
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/var/lib/salt /mnt;
            chmod --reference=/var/lib/salt /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /var/lib/salt/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: var-salt
      - name: init-var-pgsql
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/var/lib/pgsql /mnt;
            chmod --reference=/var/lib/pgsql /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /var/lib/pgsql/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: var-pgsql
      - name: init-var-cache
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/var/cache /mnt;
            chmod --reference=/var/cache /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /var/cache/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: var-cache
      - name: init-var-log
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/var/log /mnt;
            chmod --reference=/var/log /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /var/log/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: var-log
      - name: init-srv-salt
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/salt /mnt;
            chmod --reference=/srv/salt /mnt
        volumeMounts:
          - mountPath: /mnt
            name: srv-salt
      - name: init-srv-www
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/www /mnt;
            chmod --reference=/srv/www /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /srv/www/. /mnt;
              ln -s /etc/pki/trust/anchors/LOCAL-RHN-ORG-TRUSTED-SSL-CERT /mnt/RHN-ORG-TRUSTED-SSL-CERT;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: srv-www
      - name: init-srv-tftpboot
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/tftpboot /mnt;
            chmod --reference=/srv/tftpboot /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /srv/tftpboot/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: srv-tftpboot
      - name: init-srv-formulametadata
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/formula_metadata /mnt;
            chmod --reference=/srv/formula_metadata /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /srv/formula_metadata/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: srv-formulametadata
      - name: init-srv-pillar
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/pillar /mnt;
            chmod --reference=/srv/pillar /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /srv/pillar/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: srv-pillar
      - name: init-srv-susemanager
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/susemanager /mnt;
            chmod --reference=/srv/susemanager /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /srv/susemanager/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: srv-susemanager
      - name: init-srv-spacewalk
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/srv/spacewalk /mnt;
            chmod --reference=/srv/spacewalk /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /srv/spacewalk/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: srv-spacewalk
      - name: init-root
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/root /mnt;
            chmod --reference=/root /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /root/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: root
      - name: init-etc-apache2
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/apache2 /mnt;
            chmod --reference=/etc/apache2 /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/apache2/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-apache2
      - name: init-etc-rhn
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/rhn /mnt;
            chmod --reference=/etc/rhn /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/rhn/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-rhn
      - name: init-etc-systemd-multi
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/systemd/system/multi-user.target.wants /mnt;
            chmod --reference=/etc/systemd/system/multi-user.target.wants /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/systemd/system/multi-user.target.wants/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-systemd-multi
      - name: init-etc-systemd-sockets
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/systemd/system/sockets.target.wants /mnt;
            chmod --reference=/etc/systemd/system/sockets.target.wants /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/systemd/system/sockets.target.wants/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-systemd-sockets
      - name: init-etc-salt
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/salt /mnt;
            chmod --reference=/etc/salt /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/salt/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-salt
      - name: init-etc-tomcat
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/tomcat /mnt;
            chmod --reference=/etc/tomcat /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/tomcat/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-tomcat
      - name: init-etc-cobbler
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/cobbler /mnt;
            chmod --reference=/etc/cobbler /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/cobbler/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-cobbler
      - name: init-etc-sysconfig
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/sysconfig /mnt;
            chmod --reference=/etc/sysconfig /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/sysconfig/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-sysconfig
      - name: init-etc-postfix
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command:
          - sh
          - -x
          - -c
          - >
            chown --reference=/etc/postfix /mnt;
            chmod --reference=/etc/postfix /mnt;
            if [ -z "$(ls -A /mnt)" ]; then
              cp -a /etc/postfix/. /mnt;
            fi
        volumeMounts:
          - mountPath: /mnt
            name: etc-postfix
      containers:
      - name: uyuni
        image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
        imagePullPolicy: {{ .Values.pullPolicy }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "spacewalk-service stop && systemctl stop postgresql"]
        ports:
          - containerPort: 443
          - containerPort: 80
          - containerPort: 4505
          - containerPort: 4506
          - containerPort: 69
{{- if .Values.enableMonitoring | default true }}
          - containerPort: 9100
          - containerPort: 9187
          - containerPort: 9800
{{- end }}
            protocol: UDP
          - containerPort: 25151
          - containerPort: 5432
{{- if .Values.exposeJavaDebug | default false }}
          - containerPort: 8001
          - containerPort: 8002
          - containerPort: 8003
{{- end }}
        env:
          - name: TZ
            value: {{ .Values.timezone | default "Etc/UTC" }}
{{- if and .Values.mirror (or .Values.mirror.claimName .Values.mirror.hostPath) }}
          - name: MIRROR_PATH
            value: /mirror
{{- end }}
{{- if and .Values.migration (and .Values.migration.ssh .Values.migration.ssh.agentSocket) }}
          - name: SSH_AUTH_SOCK
            value: /tmp/ssh_auth_sock
{{- end }}
        livenessProbe:
          exec:
            command:
              - /usr/bin/healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 120
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
              - /usr/bin/systemctl
              - is-active
              - multi-user.target
          periodSeconds: 10
          timeoutSeconds: 10
        volumeMounts:
          - mountPath: /run
            name: tmp
          - mountPath: /sys/fs/cgroup
            name: cgroup
          - mountPath: /var/lib/cobbler
            name: var-cobbler
          - mountPath: /var/lib/salt
            name: var-salt
          - mountPath: /var/lib/pgsql
            name: var-pgsql
          - mountPath: /var/cache
            name: var-cache
          - mountPath: /var/spacewalk
            name: var-spacewalk
          - mountPath: /var/log
            name: var-log
          - mountPath: /srv/salt
            name: srv-salt
          - mountPath: /srv/www
            name: srv-www
          - mountPath: /srv/tftpboot
            name: srv-tftpboot
          - mountPath: /srv/formula_metadata
            name: srv-formulametadata
          - mountPath: /srv/pillar
            name: srv-pillar
          - mountPath: /srv/susemanager
            name: srv-susemanager
          - mountPath: /srv/spacewalk
            name: srv-spacewalk
          - mountPath: /root
            name: root
          - mountPath: /etc/apache2
            name: etc-apache2
          - mountPath: /etc/rhn
            name: etc-rhn
          - mountPath: /etc/systemd/system/multi-user.target.wants
            name: etc-systemd-multi
          - mountPath: /etc/systemd/system/sockets.target.wants
            name: etc-systemd-sockets
          - mountPath: /etc/salt
            name: etc-salt
          - mountPath: /etc/tomcat
            name: etc-tomcat
          - mountPath: /etc/cobbler
            name: etc-cobbler
          - mountPath: /etc/sysconfig
            name: etc-sysconfig
          - mountPath: /etc/postfix
            name: etc-postfix
{{- if not .Values.migration }}
          - mountPath: /etc/pki/tls
            name: etc-tls
          - name: ca-cert
            mountPath: /etc/pki/trust/anchors/LOCAL-RHN-ORG-TRUSTED-SSL-CERT
            readOnly: true
            subPath: ca.crt
          - name: tls-key
            mountPath: /etc/pki/spacewalk-tls
{{- end }}
{{- if and .Values.mirror (or .Values.mirror.claimName .Values.mirror.hostPath) }}
          - name: mirror
            mountPath: /mirror
{{- end }}
{{- if .Values.migration }}
  {{- if .Values.migration.ssh }}
    {{- if .Values.migration.ssh.agentSocket }}
          - name: ssh-auth-sock
            mountPath: /tmp/ssh_auth_sock
    {{- end }}
    {{- if .Values.migration.ssh.configPath }}
          - name: ssh-config
            mountPath: /tmp/ssh_config
    {{- end }}
    {{- if .Values.migration.ssh.knownHostsPath }}
          - name: ssh-known-hosts
            mountPath: /etc/ssh/ssh_known_hosts
    {{- end }}
  {{- end }}
  {{- if .Values.migration.dataPath }}
          - name: migration-data
            mountPath: /var/lib/uyuni-tools
  {{- end }}
{{- end }}
      volumes:
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: 256Mi
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: var-cobbler
        persistentVolumeClaim:
          claimName: var-cobbler
      - name: var-salt
        persistentVolumeClaim:
          claimName: var-salt
      - name: var-pgsql
        persistentVolumeClaim:
          claimName: var-pgsql
      - name: var-cache
        persistentVolumeClaim:
          claimName: var-cache
      - name: var-spacewalk
        persistentVolumeClaim:
          claimName: var-spacewalk
      - name: var-log
        persistentVolumeClaim:
          claimName: var-log
      - name: srv-salt
        persistentVolumeClaim:
          claimName: srv-salt
      - name: srv-www
        persistentVolumeClaim:
          claimName: srv-www
      - name: srv-tftpboot
        persistentVolumeClaim:
          claimName: srv-tftpboot
      - name: srv-formulametadata
        persistentVolumeClaim:
          claimName: srv-formulametadata
      - name: srv-pillar
        persistentVolumeClaim:
          claimName: srv-pillar
      - name: srv-susemanager
        persistentVolumeClaim:
          claimName: srv-susemanager
      - name: srv-spacewalk
        persistentVolumeClaim:
          claimName: srv-spacewalk
      - name: root
        persistentVolumeClaim:
          claimName: root
      - name: etc-apache2
        persistentVolumeClaim:
          claimName: etc-apache2
      - name: etc-rhn
        persistentVolumeClaim:
          claimName: etc-rhn
      - name: etc-systemd-multi
        persistentVolumeClaim:
          claimName: etc-systemd-multi
      - name: etc-systemd-sockets
        persistentVolumeClaim:
          claimName: etc-systemd-sockets
      - name: etc-salt
        persistentVolumeClaim:
          claimName: etc-salt
      - name: etc-tomcat
        persistentVolumeClaim:
          claimName: etc-tomcat
      - name: etc-cobbler
        persistentVolumeClaim:
          claimName: etc-cobbler
      - name: etc-sysconfig
        persistentVolumeClaim:
          claimName: etc-sysconfig
      - name: etc-postfix
        persistentVolumeClaim:
          claimName: etc-postfix
{{- if not .Values.migration }}
      - name: ca-cert
        configMap:
          name: uyuni-ca
      - name: etc-tls
        persistentVolumeClaim:
          claimName: etc-tls
      - name: tls-key
        secret:
          secretName: uyuni-cert
          items:
            - key: tls.crt
              path: spacewalk.crt
            - key: tls.key
              path: spacewalk.key
              mode: 0600
{{- end }}
{{- if .Values.mirror }}
  {{- if .Values.mirror.claimName }}
      - name: mirror
        persistentVolumeClaim:
          claimName: {{ .Values.mirror.claimName }}
  {{- else if .Values.mirror.hostPath }}
      - name: mirror
        hostPath:
          path: {{ .Values.mirror.hostPath }}
  {{- end }}
{{- end }}
{{- if .Values.migration }}
  {{- if .Values.migration.ssh }}
    {{- if .Values.migration.ssh.agentSocket }}
      - name: ssh-auth-sock
        hostPath:
          path: {{ .Values.migration.ssh.agentSocket }}
    {{- end }}
    {{- if .Values.migration.ssh.configPath }}
      - name: ssh-config
        hostPath:
          path: {{ .Values.migration.ssh.configPath }}
    {{- end }}
    {{- if .Values.migration.ssh.knownHostsPath }}
      - name: ssh-known-hosts
        hostPath:
          path: {{ .Values.migration.ssh.knownHostsPath }}
    {{- end }}
    {{- if .Values.migration.dataPath }}
      - name: migration-data
        hostPath:
          path: {{ .Values.migration.dataPath }}
    {{- end }}
  {{- end }}
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
