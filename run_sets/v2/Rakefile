require 'rubygems'
require 'yaml'
require 'cucumber/rake/task'

$LOAD_PATH.unshift File.expand_path("../lib", __FILE__)

Dir.glob(File.join(Dir.pwd, 'run_sets', '*.yml')).each do |entry|
  namespace :cucumber do
    outputfile = "#{entry}.html"
    Cucumber::Rake::Task.new(File.basename(entry, '.yml').to_sym) do |t|
      cucumber_opts = %W(--format pretty --format html -o #{outputfile} -f rerun --out failed_#{entry}.txt)
      features = YAML.safe_load(File.read(entry))
      t.cucumber_opts = cucumber_opts + features
    end
  end
end
# initserver is the features set that run first
desc "Initialize SUSE Manager Server"
task :initserver do
  puts "initserver"
  `touch initserver.html`
  # Rake::Task['cucumber:initserver'].invoke
end

# salt features car run lik tradclient after initserver
desc "Run salt feature tests"
task :salt => [:initserver] do
  puts "salt"
  `touch salt.html`
  # Rake::Task['cucumber:salt'].invoke
end

# docker depends on salt and initserver
desc "Run docker features tests"
task :docker => [:initserver, :salt] do
  puts "docker"
  `touch docker.html`
  # Rake::Task['cucumber:docker'].invoke
end

desc "Run trad-client features tests"
task :tradclient => [:initserver] do
  puts "tradclient"
  `touch tradclient.html`
  # Rake::Task['cucumber:tradclient'].invoke
end

# here is the MAIN function
multitask :mallococomero => [:initserver, :tradclient, :docker, :salt] do
  puts "Completed parallel execution"
  `mv *.html results`
end

task :default => [:mallococomero]
