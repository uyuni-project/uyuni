<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"classpath://org/hibernate/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <!-- This is set to -1 since its Abstract so we never get a base Action -->
    <class name="com.redhat.rhn.domain.action.Action" table="rhnAction"
        discriminator-value="-1" >
        <id name="id" type="long" column="id">
            <meta attribute="scope-set">protected</meta>
            <generator class="sequence">
                <param name="sequence">rhn_event_id_seq</param>
            </generator>
        </id>
        <discriminator column="action_type" type="java.lang.Integer"
            insert="false"/>
        <property name="name" column="name" type="string" length="128" />
        <property name="earliestAction" column="earliest_action" type="timestamp" />
        <property name="version" column="version" type="long" />
        <property name="archived" column="archived" type="long" />
        <property name="created" column="created" type="timestamp" insert="false" update="false"/>
        <property name="modified" column="modified" type="timestamp" insert="false" update="false"/>

        <many-to-one name="prerequisite"
            class="com.redhat.rhn.domain.action.Action"
            column="prerequisite" update="true" insert="true" cascade="all" />

        <many-to-one name="schedulerUser"
            class="com.redhat.rhn.domain.user.legacy.UserImpl"
            column="scheduler" />
        <many-to-one name="actionType"
            class="com.redhat.rhn.domain.action.ActionType"
            column="action_type" />
        <set name="serverActions" outer-join="false" cascade="all" lazy="true"
            inverse="true" order-by="modified asc">
            <key column="action_id"/>
            <one-to-many
                class="com.redhat.rhn.domain.action.server.ServerAction" />
        </set>
        <many-to-one
            name="org"
            class="com.redhat.rhn.domain.org.Org"
            column="org_id"/>

                <!-- SUBCLASSES OF ACTION -->
                <!-- ErrataAction subclass -->
                <subclass name="com.redhat.rhn.domain.action.errata.ErrataAction"
                        lazy="true" discriminator-value="5">
                        <set name="errata" outer-join="false" table="rhnActionErrataUpdate">
                                <key column="action_id" />
                                <many-to-many column="errata_id" outer-join="false"
                                        class="com.redhat.rhn.domain.errata.Errata" />
                        </set>
                </subclass>
        <subclass name="com.redhat.rhn.domain.action.image.DeployImageAction"
            lazy="true" discriminator-value="500">
            <one-to-one name="details"
                class="com.redhat.rhn.domain.action.image.DeployImageActionDetails"
                outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.Up2DateConfigGetAction"
                                discriminator-value="6" lazy="true">
                </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.Up2DateConfigUpdateAction"
                                discriminator-value="7" lazy="true">
                </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.RebootAction"
                                discriminator-value="9" lazy="true">
                </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.RollbackConfigAction"
                                discriminator-value="10" lazy="true">
                </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.RollbackListTransactionsAction"
                                discriminator-value="11" lazy="true">
                </subclass>
                <subclass
                        name="com.redhat.rhn.domain.action.HardwareRefreshAction"
                        discriminator-value="2" lazy="true">
                </subclass>
                <!-- ConfigUploadAction: 15 -->
                <subclass name="com.redhat.rhn.domain.action.config.ConfigUploadAction"
                    discriminator-value="15" lazy="true">
                    <set name="configChannelAssociations" cascade="all" lazy="false" table="rhnActionConfigChannel">
                        <key column="action_id"/>
                        <composite-element
                            class="com.redhat.rhn.domain.action.config.ConfigChannelAssociation">
                            <property name="created" column="created" type="timestamp"
                                      insert="false" update="false"/>
                    <property name="modified" column="modified" type="timestamp"
                              insert="false" update="false"/>
                    <many-to-one name="server" column="server_id"
                                                class="com.redhat.rhn.domain.server.Server"
                                                outer-join="true" not-null="true">
                                        </many-to-one>
                                        <many-to-one name="configChannel"
                                                column="config_channel_id"
                                                class="com.redhat.rhn.domain.config.ConfigChannel"
                                                outer-join="true" not-null="true">
                                        </many-to-one>
                                </composite-element>
                    </set>
                    <set name="configFileNameAssociations" cascade="all" lazy="true" table="rhnActionConfigFileName">
                        <key column="action_id"/>
                        <composite-element
                            class="com.redhat.rhn.domain.action.config.ConfigFileNameAssociation">
                            <property name="created" column="created" type="timestamp"
                                      insert="false" update="false"/>
                    <property name="modified" column="modified" type="timestamp"
                              insert="false" update="false"/>
                    <many-to-one name="server" column="server_id"
                                                class="com.redhat.rhn.domain.server.Server"
                                                outer-join="true" not-null="true">
                                        </many-to-one>
                                        <many-to-one name="configFileName"
                                                column="config_file_name_id"
                                                class="com.redhat.rhn.domain.config.ConfigFileName"
                                                outer-join="true" not-null="true">
                                        </many-to-one>
                                </composite-element>
                    </set>
                </subclass>
                <!-- ConfigUploadMtimeAction: 23 -->
                <subclass name="com.redhat.rhn.domain.action.config.ConfigUploadMtimeAction"
                        discriminator-value="23" lazy="true">
                        <set lazy="true" cascade="all" inverse="true" name="configDateFileActions" >
                                <key column="action_id" />
                                <one-to-many
                                        class="com.redhat.rhn.domain.action.config.ConfigDateFileAction"
                                        />
                        </set>
                        <set name="configChannelAssociations" cascade="all" lazy="true" table="rhnActionConfigChannel">
                                <key column="action_id"/>
                                <composite-element
                                        class="com.redhat.rhn.domain.action.config.ConfigChannelAssociation">
                                        <property name="created" column="created" type="timestamp"
                                      insert="false" update="false"/>
                    <property name="modified" column="modified" type="timestamp"
                              insert="false" update="false"/>
                                        <many-to-one name="server" column="server_id"
                                                class="com.redhat.rhn.domain.server.Server"
                                                outer-join="true" not-null="true">
                                        </many-to-one>
                                        <many-to-one name="configChannel"
                                                column="config_channel_id"
                                                class="com.redhat.rhn.domain.config.ConfigChannel"
                                                outer-join="true" not-null="true">
                                        </many-to-one>
                                </composite-element>
                        </set>
                        <one-to-one name="configDateDetails"
                                class="com.redhat.rhn.domain.action.config.ConfigDateDetails"
                                outer-join="false" cascade="all" constrained="false" />
                </subclass>
                <!-- ConfigAction subclass: 16, 17, 18, 22 -->
                <subclass name="com.redhat.rhn.domain.action.config.ConfigAction"
                        discriminator-value="16" lazy="true">
                        <set lazy="true" cascade="all" inverse="true" name="configRevisionActions" >
                                <key column="action_id" />
                                <one-to-many
                                        class="com.redhat.rhn.domain.action.config.ConfigRevisionAction"
                                        />
                        </set>
                        <subclass
                                name="com.redhat.rhn.domain.action.config.ConfigDeployAction"
                                discriminator-value="17" lazy="true">
                        </subclass>
                        <subclass
                                name="com.redhat.rhn.domain.action.config.ConfigVerifyAction"
                                discriminator-value="18" lazy="true">
                        </subclass>
                        <!-- TODO: These last two subclasses probably don't belong here.
                             Put them in the right place once we start using them. -->
                        <subclass
                                name="com.redhat.rhn.domain.action.config.ActivationSchedulePackageDeployAction"
                                discriminator-value="21" lazy="true">
                        </subclass>
                        <subclass
                                name="com.redhat.rhn.domain.action.config.ActivationScheduleDeployAction"
                                discriminator-value="22" lazy="true">
                        </subclass>
                </subclass>
                <!-- DaemonConfigAction: 32 -->
                <subclass name="com.redhat.rhn.domain.action.config.DaemonConfigAction"
                        discriminator-value="32" lazy="true">
                        <one-to-one name="daemonConfigDetails"
                                class="com.redhat.rhn.domain.action.config.DaemonConfigDetails"
                                outer-join="false" cascade="all" constrained="false" />
                </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.AppletUseSatelliteAction"
                                discriminator-value="34" lazy="true">
                </subclass>
                <subclass
                                name="com.redhat.rhn.domain.action.RollbackAction"
                                discriminator-value="197542" lazy="true">
                </subclass>

        <!-- ScapActions: 50 -->
        <subclass name="com.redhat.rhn.domain.action.scap.ScapAction"
                discriminator-value="50" lazy="true">
                <one-to-one name="scapActionDetails"
                        class="com.redhat.rhn.domain.action.scap.ScapActionDetails"
                        outer-join="false" cascade="all" constrained="false"
                        property-ref="parentAction"/>
        </subclass>

        <!-- ScriptActions: 30 -->
        <subclass
            name="com.redhat.rhn.domain.action.script.ScriptRunAction"
            discriminator-value="30" lazy="true">
            <one-to-one name="scriptActionDetails"
                class="com.redhat.rhn.domain.action.script.ScriptActionDetails"
                outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>

        <!-- KickstartActions: 19, 20 -->
        <subclass
            name="com.redhat.rhn.domain.action.kickstart.KickstartAction"
            discriminator-value="-3" lazy="true">
            <one-to-one name="kickstartActionDetails"
                class="com.redhat.rhn.domain.action.kickstart.KickstartActionDetails"
                outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
            <subclass
                name="com.redhat.rhn.domain.action.kickstart.KickstartInitiateAction"
                discriminator-value="19" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.kickstart.KickstartScheduleSyncAction"
                discriminator-value="20" lazy="true">
            </subclass>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.kickstart.KickstartGuestAction"
            discriminator-value="-4" lazy="true">
          <one-to-one name="kickstartGuestActionDetails"
                class="com.redhat.rhn.domain.action.kickstart.KickstartGuestActionDetails"
                outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
          <subclass name="com.redhat.rhn.domain.action.kickstart.KickstartInitiateGuestAction"
              discriminator-value="35" lazy="true">
          </subclass>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationShutdownGuestAction"
                discriminator-value="36" lazy="true">
          <join table="rhnActionVirtShutdown">
            <key column="action_id"/>
            <property name="uuid"/>
            <property name="force" type="yes_no"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationStartGuestAction"
                discriminator-value="37" lazy="true">
          <join table="rhnActionVirtStart">
            <key column="action_id"/>
            <property name="uuid"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationSuspendGuestAction"
                discriminator-value="38" lazy="true">
          <join table="rhnActionVirtSuspend">
            <key column="action_id"/>
            <property name="uuid"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationResumeGuestAction"
                discriminator-value="39" lazy="true">
          <join table="rhnActionVirtResume">
            <key column="action_id"/>
            <property name="uuid"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationRebootGuestAction"
                discriminator-value="40" lazy="true">
          <join table="rhnActionVirtReboot">
            <key column="action_id"/>
            <property name="uuid"/>
            <property name="force" type="yes_no"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationDestroyGuestAction"
                discriminator-value="41" lazy="true">
          <join table="rhnActionVirtDestroy">
            <key column="action_id"/>
            <property name="uuid"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationSetMemoryGuestAction"
                discriminator-value="42" lazy="true">
          <join table="rhnActionVirtSetMemory">
            <key column="action_id"/>
            <property name="uuid"/>
            <property name="memory" type="java.lang.Integer"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationSetVcpusGuestAction"
                discriminator-value="48" lazy="true">
          <join table="rhnActionVirtVcpu">
            <key column="action_id"/>
            <property name="uuid"/>
            <property name="vcpu" type="java.lang.Integer"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationSchedulePollerAction"
                discriminator-value="43" lazy="true">
          <join table="rhnActionVirtSchedulePoller">
            <key column="action_id"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationHostPackageInstall"
                discriminator-value="44" lazy="true">
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationGuestPackageInstall"
                discriminator-value="45" lazy="true">
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.kickstart.KickstartHostToolsChannelSubscriptionAction"
                discriminator-value="46" lazy="true">
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.kickstart.KickstartGuestToolsChannelSubscriptionAction"
                discriminator-value="47" lazy="true">
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.CertificateUpdateAction"
                  discriminator-value="51" lazy="true">
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationDeleteGuestAction"
                discriminator-value="507" lazy="true">
          <join table="rhnActionVirtDelete">
            <key column="action_id"/>
            <property name="uuid"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationCreateGuestAction"
                discriminator-value="508" lazy="true">
          <list name="disks" lazy="true" cascade="save-update">
              <key column="action_id"/>
              <list-index column="idx"/>
              <one-to-many
                  class="com.redhat.rhn.domain.action.virtualization.VirtualizationCreateActionDiskDetails" />
          </list>

          <list name="interfaces" lazy="true"  cascade="save-update">
              <key column="action_id"/>
              <list-index column="idx"/>
              <one-to-many
                  class="com.redhat.rhn.domain.action.virtualization.VirtualizationCreateActionInterfaceDetails" />
          </list>
          <join table="rhnActionVirtCreate">
            <key column="action_id"/>
            <property name="uuid" type="string" column="uuid"/>
            <property name="type" type="string" column="vm_type"/>
            <property name="guestName" type="string" column="vm_name"/>
            <property name="osType" type="string" column="os_type"/>
            <property name="memory" type="long" column="memory"/>
            <property name="vcpus" type="long" column="vcpus"/>
            <property name="arch" type="string" column="arch"/>
            <property name="graphicsType" type="string" column="graphics_type"/>
            <property name="removeDisks" type="yes_no" column="remove_disks"/>
            <property name="removeInterfaces" type="yes_no" column="remove_interfaces"/>
            <property name="cobblerSystem" type="string" column="cobbler_system"/>
            <property name="kickstartHost" type="string" column="kickstart_host"/>
            <property name="kernelOptions" type="string" column="kernel_options"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationPoolRefreshAction"
          discriminator-value="509" lazy="true">
          <join table="rhnActionVirtPoolRefresh">
            <key column="action_id"/>
            <property name="poolName" type="string" column="pool_name"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationPoolStartAction"
          discriminator-value="510" lazy="true">
          <join table="rhnActionVirtPoolStart">
            <key column="action_id"/>
            <property name="poolName" type="string" column="pool_name"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationPoolStopAction"
          discriminator-value="511" lazy="true">
          <join table="rhnActionVirtPoolStop">
            <key column="action_id"/>
            <property name="poolName" type="string" column="pool_name"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationPoolDeleteAction"
          discriminator-value="512" lazy="true">
          <join table="rhnActionVirtPoolDelete">
            <key column="action_id"/>
            <property name="poolName" type="string" column="pool_name"/>
            <property name="purge" type="yes_no" column="purge"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationPoolCreateAction"
          discriminator-value="513" lazy="true">
          <join table="rhnActionVirtPoolCreate">
            <key column="action_id"/>
            <property name="poolName" type="string" column="pool_name"/>
            <property name="uuid" type="string" column="uuid"/>
            <property name="type" type="string" column="type"/>
            <property name="target" type="string" column="target"/>
            <property name="autostart" type="yes_no" column="autostart"/>
            <property name="mode" type="string" column="permission_mode"/>
            <property name="owner" type="string" column="permission_owner"/>
            <property name="group" type="string" column="permission_group"/>
            <property name="seclabel" type="string" column="permission_seclabel"/>
            <property name="sourceAsString" type="string" column="source"/>
          </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.BaseVirtualizationVolumeAction"
          discriminator-value="514" lazy="true">
          <join table="rhnActionVirtVolDelete">
            <key column="action_id"/>
            <property name="poolName" type="string" column="pool_name"/>
            <property name="volumeName" type="string" column="volume_name"/>
          </join>
        </subclass>


        <!-- PackageActions: 1, 3, 4, 8, 13, 14, 33 -->
        <!-- PackageAction is abstract - the subclasses only get instantiated -->
        <subclass
            name="com.redhat.rhn.domain.action.rhnpackage.PackageAction"
            discriminator-value="-2" lazy="true">

            <set name="details" lazy="true" inverse="true" cascade="save-update">
                <key column="action_id"/>
                <one-to-many class="com.redhat.rhn.domain.action.rhnpackage.PackageActionDetails" />
            </set>

            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageRefreshListAction"
                discriminator-value="1" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageUpdateAction"
                discriminator-value="3" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageRemoveAction"
                discriminator-value="4" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageDeltaAction"
                discriminator-value="8" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageAutoUpdateAction"
                discriminator-value="13" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageRunTransactionAction"
                discriminator-value="14" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageVerifyAction"
                discriminator-value="33" lazy="true">
            </subclass>
            <subclass
                name="com.redhat.rhn.domain.action.rhnpackage.PackageLockAction"
                discriminator-value="502" lazy="true">
            </subclass>


        </subclass>

        <!-- DistUpgradeAction -->
        <subclass name="com.redhat.rhn.domain.action.dup.DistUpgradeAction"
            lazy="true" discriminator-value="501">
            <one-to-one name="details"
                class="com.redhat.rhn.domain.action.dup.DistUpgradeActionDetails"
                outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>

        <!-- ApplyStatesAction -->
        <subclass name="com.redhat.rhn.domain.action.salt.ApplyStatesAction"
            lazy="true" discriminator-value="503">
            <one-to-one name="details"
                class="com.redhat.rhn.domain.action.salt.ApplyStatesActionDetails"
                outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>

        <!-- ImageBuildAction -->
        <subclass name="com.redhat.rhn.domain.action.salt.build.ImageBuildAction"
                  lazy="true" discriminator-value="504">
            <one-to-one name="details"
                        class="com.redhat.rhn.domain.action.salt.build.ImageBuildActionDetails"
                        outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>
        <!-- ImageInspectAction -->
        <subclass name="com.redhat.rhn.domain.action.salt.inspect.ImageInspectAction"
                  lazy="true" discriminator-value="505">
            <one-to-one name="details"
                class="com.redhat.rhn.domain.action.salt.inspect.ImageInspectActionDetails"
                        outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.channel.SubscribeChannelsAction"
                  lazy="true" discriminator-value="506">
            <one-to-one name="details"
                        class="com.redhat.rhn.domain.action.channel.SubscribeChannelsActionDetails"
                        outer-join="false" cascade="all" constrained="false" property-ref="parentAction"/>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.cluster.ClusterGroupRefreshNodesAction"
                  lazy="true" discriminator-value="515">
            <join table="rhnActionClusterGroupRefreshNodes">
                <key column="action_id"/>
                <many-to-one name="cluster" column="cluster_id" class="com.suse.manager.model.clusters.Cluster"/>
            </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.cluster.ClusterJoinNodeAction"
                lazy="true" discriminator-value="516">
            <set name="serverIds" table="rhnActionClusterServers">
                <key column="action_id"/>
                <element column="server_id" type="long"/>
            </set>
            <join table="rhnActionClusterJoinNode">
                <key column="action_id"/>
                <many-to-one name="cluster" column="cluster_id" class="com.suse.manager.model.clusters.Cluster" not-null="true" />
                <property name="jsonParams" type="string" column="json_params" not-null="true" />
            </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.cluster.ClusterRemoveNodeAction"
                  lazy="true" discriminator-value="517">
            <set name="serverIds" table="rhnActionClusterServers">
                <key column="action_id"/>
                <element column="server_id" type="long"/>
            </set>
            <join table="rhnActionClusterRemoveNode">
                <key column="action_id"/>
                <many-to-one name="cluster" column="cluster_id" class="com.suse.manager.model.clusters.Cluster" not-null="true" />
                <property name="jsonParams" type="string" column="json_params" not-null="true" />
            </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.cluster.ClusterUpgradeAction"
                  lazy="true" discriminator-value="518">
            <join table="rhnActionClusterUpgradeCluster">
                <key column="action_id"/>
                <many-to-one name="cluster" column="cluster_id" class="com.suse.manager.model.clusters.Cluster" not-null="true" />
                <property name="jsonParams" type="string" column="json_params" not-null="true" />
            </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationNetworkStateChangeAction"
                  discriminator-value="519" lazy="true">
            <join table="rhnActionVirtNetworkStateChange">
                <key column="action_id"/>
                <property name="networkName" type="string" column="network_name"/>
                <property name="state" type="string" column="state"/>
            </join>
        </subclass>

        <subclass name="com.redhat.rhn.domain.action.virtualization.VirtualizationNetworkCreateAction"
                  discriminator-value="520" lazy="true">
            <join table="rhnActionVirtNetworkCreate">
                <key column="action_id"/>
                <property name="networkName" type="string" column="network_name"/>
                <property name="definitionAsString" type="string" column="definition"/>
            </join>
        </subclass>

    </class>
    <query name="Action.findByIdandOrgId">
        <![CDATA[from com.redhat.rhn.domain.action.Action as a where a.id = :aid and org_id = :orgId]]>
    </query>

    <sql-query name="Action.getServerActionCountByStatus">
        <return-scalar type="int" column="count"/>
        <![CDATA[select count(sa.server_id) as count from rhnServerAction sa where sa.action_id = :aid and
                                sa.status = :stid]]>
    </sql-query>



    <query name="Action.findDependentActions"><![CDATA[
                from Action a where a.prerequisite.id in (:action_ids)
    ]]></query>

   <sql-query name="Action.findLastActionByServerIdAndActionTypeIdAndUserId">
        <![CDATA[
select {ra.*}
    from rhnAction {ra},
    (select NULL as uuid, NULL as force from dual) ra_1_,
    (select NULL as uuid from dual) ra_2_,
    (select NULL as uuid from dual) ra_3_,
    (select NULL as uuid from dual) ra_4_,
    (select NULL as uuid, NULL as force from dual) ra_5_,
    (select NULL as uuid from dual) ra_6_,
    (select NULL as uuid, NULL as memory from dual) ra_7_,
    (select NULL as uuid, NULL as vcpu from dual) ra_8_,
    (select NULL as uuid from dual) ra_10_,
    (select NULL as uuid,
            NULL as vm_type,
            NULL as vm_name,
            NULL as os_type,
            NULL as memory,
            NULL as vcpus,
            NULL as arch,
            NULL as graphics_type,
            NULL as remove_disks,
            NULL as remove_interfaces,
            NULL as cobbler_system,
            NULL as kickstart_host,
            NULL as kernel_options from dual) ra_11_,
    (select NULL as pool_name from dual) ra_12_,
    (select NULL as pool_name from dual) ra_13_,
    (select NULL as pool_name from dual) ra_14_,
    (select NULL as pool_name,
            NULL as purge from dual) ra_15_,
    (select NULL as pool_name,
            NULL as uuid,
            NULL as type,
            NULL as target,
            NULL as autostart,
            NULL as permission_mode,
            NULL as permission_owner,
            NULL as permission_group,
            NULL as permission_seclabel,
            NULL as source from dual) ra_16_,
    (select NULL as pool_name,
            NULL as volume_name from dual) ra_17_,
    (select NULL as cluster_id from dual) ra_18_,
    (select NULL as cluster_id,
            NULL as server_id,
            NULL as json_params from dual) ra_19_,
    (select NULL as cluster_id,
            NULL as server_id,
            NULL as json_params from dual) ra_20_,
    (select NULL as cluster_id,
            NULL as json_params from dual) ra_21_,
    (select NULL as network_name,
            NULL as state from dual) ra_22_,
    (select NULL as network_name,
            NULL as definition from dual) ra_23_
   where
    ra.id = (SELECT max(rA.id)
                   FROM rhnAction rA
                              inner join rhnServerAction rsa on rsa.action_id = rA.id
                              inner join rhnActionStatus ras on ras.id = rsa.status
                              inner join rhnUserServerPerms usp on usp.server_id = rsa.server_id
                   WHERE
                      usp.user_id = :userId
                      AND rsa.server_id = :serverId
                      AND ras.name IN ('Completed', 'Failed')
                  AND rA.action_type = :actionTypeId
                        )
        ]]>

        <return alias="ra" class="com.redhat.rhn.domain.action.Action" />
    </sql-query>

    <query name="Action.findByServerAndOrgId">
        <![CDATA[from com.redhat.rhn.domain.action.Action as a
            left join fetch a.serverActions as sa
            where org_id = :orgId and
            sa.server = :server]]>
    </query>


     <query name="Action.rescheduleFailedActions">
       <![CDATA[ update  com.redhat.rhn.domain.action.server.ServerAction sa
                                        set sa.status = :queued, sa.remainingTries = :tries,
                                            sa.pickupTime = null, sa.completionTime = null,
                                            resultCode = null, resultMsg = null
                                        where sa.status = :failed and
                                                        sa.parentAction = :action ]]>
    </query>

     <query name="Action.rescheduleAllActions">
       <![CDATA[ update  com.redhat.rhn.domain.action.server.ServerAction sa
                                        set sa.status = :queued, sa.remainingTries = :tries,
                                            sa.pickupTime = null, sa.completionTime = null,
                                            resultCode = null, resultMsg = null
                                        where sa.parentAction = :action ]]>
    </query>
    
    <query name="Action.rescheduleSingleServerAction">
       <![CDATA[ update  com.redhat.rhn.domain.action.server.ServerAction sa
                                        set sa.status = :queued, sa.remainingTries = :tries,
                                            sa.pickupTime = null, sa.completionTime = null,
                                            resultCode = null, resultMsg = null
                                        where sa.parentAction = :action and
                                                              sa.serverId = :server ]]>
    </query>

    <query name="Action.findMinionIds">
    <![CDATA[
    SELECT sa.server.id
        FROM ServerAction sa
        JOIN sa.server s
        WHERE sa.server.class = com.redhat.rhn.domain.server.MinionServer AND action_id = :id
    ]]>
    </query>
    
    <query name="Action.findTradClientServerActions">
    <![CDATA[
        SELECT sa
            FROM ServerAction AS sa
                JOIN sa.server AS s
            WHERE s.class != com.redhat.rhn.domain.server.MinionServer
                AND action_id = :id
    ]]>
    </query>

    <query name="Action.findMinionSummaries">
    <![CDATA[
        SELECT sa.server.id, s.minionId, s.digitalServerId, s.machineId, c.label
            FROM ServerAction AS sa
                JOIN sa.server AS s
                JOIN s.contactMethod AS c
            WHERE sa.server.class = com.redhat.rhn.domain.server.MinionServer
                AND action_id = :id
    ]]>
    </query>
    
   <sql-query name="Action.findServerIds">
        <![CDATA[
select sa.server_id
        from rhnServerAction sa
        where sa.action_id = :action_id
        ]]>
    </sql-query>

    <sql-query name="Action.lookupPendingMinionActions">
        <![CDATA[select {ra.*}
                     from rhnAction {ra},
                     (select NULL as uuid, NULL as force from dual) ra_1_,
                     (select NULL as uuid from dual) ra_2_,
                     (select NULL as uuid from dual) ra_3_,
                     (select NULL as uuid from dual) ra_4_,
                     (select NULL as uuid, NULL as force from dual) ra_5_,
                     (select NULL as uuid from dual) ra_6_,
                     (select NULL as uuid, NULL as memory from dual) ra_7_,
                     (select NULL as uuid, NULL as vcpu from dual) ra_8_,
                     (select NULL as uuid from dual) ra_10_,
                     (select NULL as uuid,
                             NULL as vm_type,
                             NULL as vm_name,
                             NULL as os_type,
                             NULL as memory,
                             NULL as vcpus,
                             NULL as arch,
                             NULL as graphics_type,
                             NULL as remove_disks,
                             NULL as remove_interfaces,
                             NULL as cobbler_system,
                             NULL as kickstart_host,
                             NULL as kernel_options from dual) ra_11_,
                     (select NULL as pool_name from dual) ra_12_,
                     (select NULL as pool_name from dual) ra_13_,
                     (select NULL as pool_name from dual) ra_14_,
                     (select NULL as pool_name,
                             NULL as purge from dual) ra_15_,
                     (select NULL as pool_name,
                             NULL as uuid,
                             NULL as type,
                             NULL as target,
                             NULL as autostart,
                             NULL as permission_mode,
                             NULL as permission_owner,
                             NULL as permission_group,
                             NULL as permission_seclabel,
                             NULL as source from dual) ra_16_,
                     (select NULL as pool_name,
                             NULL as volume_name from dual) ra_17_,
                     (select NULL as cluster_id from dual) ra_18_,
                     (select NULL as cluster_id,
                             NULL as server_id,
                             NULL as json_params from dual) ra_19_,
                     (select NULL as cluster_id,
                             NULL as server_id,
                             NULL as json_params from dual) ra_20_,
                     (select NULL as cluster_id,
                             NULL as json_params from dual) ra_21_,
                     (select NULL as network_name,
                             NULL as state from dual) ra_22_,
                     (select NULL as network_name,
                             NULL as definition from dual) ra_23_
                     where ra.id in (select distinct ac.id
                                   from rhnAction ac
                                      inner join rhnServerAction sa on ac.id = sa.action_id
                                      inner join suseMinionInfo mi on sa.server_id = mi.server_id
                                   where sa.status in (0, 1))
        ]]>
        <return alias="ra" class="com.redhat.rhn.domain.action.Action"/>
    </sql-query>

    <sql-query name="Action.updateServerActions">
        <![CDATA[
            UPDATE rhnServerAction
                SET status = :status
            WHERE action_id  = :action_id
                AND server_id  IN (:server_ids)
                AND status NOT IN(2,3)
        ]]>
    </sql-query>
</hibernate-mapping>
