name: TestFlow

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.ref }}
  cancel-in-progress: true

env:
  UYUNI_PROJECT: uyuni-project
  UYUNI_VERSION: master

jobs:
  determine_tests:
    name: Get recommended tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Run Redis container
        run: ./testsuite/podman_runner/run_redis.sh

      - name: Get changed files
        id: changed_files
        uses: Ana06/get-changed-files@25f79e676e7ea1868813e21465014798211fad8c #v2.3.0
        with:
          filter: '*.java'

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install NPM Redis dependency
        run: npm i ioredis

      - id: tests_covering_pr
        name: Tests covering the Pull Request
        run: |
          recommended_tests=$(node .github/scripts/test_covering_pr.js ${{ steps.changed_files.outputs.all }})
          echo "recommended_tests=$recommended_tests" >> $GITHUB_OUTPUT
          echo "Recommended Tests: $recommended_tests"

      - name: Determine if we should run the full test suite
        id: determine_running_full_testsuite
        run: |
          recommended_count=$(echo "${{ steps.tests_covering_pr.outputs.recommended_tests }}" | awk -F, '{print NF}' RS=)
          if [[ "$recommended_count" -gt 30 || "$recommended_count" -eq 0 ]]; then
            echo "run_full_testsuite=true" >> $GITHUB_OUTPUT
          else
            echo "run_full_testsuite=false" >> $GITHUB_OUTPUT
          fi

    outputs:
      recommended_tests: ${{ steps.tests_covering_pr.outputs.recommended_tests }}
      run_full_testsuite: ${{ steps.determine_running_full_testsuite.outputs.run_full_testsuite }}

  recommended-tests:
    needs: determine_tests
    name: Recommended
    uses: ./.github/workflows/acceptance_tests_base.yml
    with:
      tests: "20_run_recommended_tests.sh"
      server_id: "recommended"
      recommended_tests: ${{ needs.determine_tests.outputs.recommended_tests }}
      skip_tests: ${{ needs.determine_tests.outputs.run_full_testsuite == 'true' }}
    secrets: inherit

  acceptance-tests:
    needs: determine_tests
    name: Acceptance
    uses: ./.github/workflows/acceptance_tests_base.yml
    with:
      tests: "18_run_secondary_tests.sh"
      server_id: "acceptance"
      skip_tests: ${{ needs.determine_tests.outputs.run_full_testsuite == 'false' }}
    secrets: inherit

  additional-tests:
    needs: determine_tests
    name: (${{ matrix.set }}) Additional
    uses: ./.github/workflows/acceptance_tests_base.yml
    strategy:
      fail-fast: false
      matrix:
        set: ['1', '2', '3', '4', '5']
    with:
      tests: "22_run_secondary_parallelizable_tests_subset.sh ${{ matrix.set }}"
      server_id: "additional_${{ matrix.set }}"
      skip_tests: ${{ needs.determine_tests.outputs.run_full_testsuite == 'false' }}
    secrets: inherit

  insert-test-run-into-db:
    name: Insert test run into DB
    runs-on: ubuntu-latest
    needs: [recommended-tests, acceptance-tests, additional-tests]
    if: ${{ !cancelled() && github.repository == 'uyuni-project/uyuni' }}
    continue-on-error: true
    permissions:
      pull-requests: read
    env:
      DOWNLOADED_CUCUMBER_REPORTS_PATH: cucumber-reports/
    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c #v46.0.5
        with:
          files_ignore: '**/*.changes*'
          json: true

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 #v5.6
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r testsuite/ext-tools/predictive-test-selection/requirements.txt

      - name: Download all Cucumber reports uploaded by previous jobs as artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #v5.0
        with:
          path: ${{ env.DOWNLOADED_CUCUMBER_REPORTS_PATH }}
          pattern: cucumber_json_reports_*
          merge-multiple: true

      - name: Process test run data and insert it into database
        env:
          PGUSER: ${{ secrets.PGSQL_USERNAME }}
          PGPASSWORD: ${{ secrets.PGSQL_PASSWORD }}
          PGSERVER: ${{ secrets.PGSQL_SERVER }}
          PGDATABASE: ${{ secrets.PGSQL_DATABASE }}
          TEST_RUNS_DATABASE_CONNECTION_STRING: postgresql://${PGUSER}:${PGPASSWORD}@${PGSERVER}/${PGDATABASE}
        run: |
          python .github/scripts/insert_test_run_into_db.py \
            --run-id ${{ github.run_id }} \
            --pr-number ${{ github.event.pull_request.number }} \
            --commit-sha ${{ github.event.pull_request.head.sha }} \
            --modified-files ${{ steps.changed-files.outputs.all_modified_files }} \
            --cucumber-reports-path "${{ env.DOWNLOADED_CUCUMBER_REPORTS_PATH }}"
