apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: uyuni
  name: db
  namespace: "{{ .Release.Namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: db
        app.kubernetes.io/part-of: uyuni
    spec:
      containers:
        - env:
            - name: TZ
              value: {{ .Values.timezone | default "Etc/UTC" }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: db-admin-credentials
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: db-admin-credentials
            - name: MANAGER_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: db-credentials
            - name: MANAGER_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: db-credentials
            - name: REPORT_DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: reportdb-credentials
            - name: REPORT_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: reportdb-credentials
          image: {{- include "deployment.container.image" (dict "name" "server-postgresql" "global" .) | indent 1}}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: db
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: var-pgsql
            - mountPath: /etc/pki
              name: tls-secret
{{- if .Values.registrySecret }}
      imagePullSecrets:
        - name: {{ .Values.registrySecret }}
{{- end }}
      securityContext:
        fsGroup: 999
      volumes:
        - name: var-pgsql
          persistentVolumeClaim:
            claimName: var-pgsql
        - name: tls-secret
          secret:
            items:
              - key: tls.crt
                path: tls/certs/spacewalk.crt
              - key: tls.key
                mode: 256
                path: tls/private/pg-spacewalk.key
              - key: ca.crt
                path: trust/anchors/LOCAL-RHN-ORG-TRUSTED-SSL-CERT
            secretName: db-cert
