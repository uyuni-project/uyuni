<datasource_modes>

<mode name="system_scap_enabled_check">
  <query params="user_id, sid">
  SELECT count(cc.server_id) as count
      FROM rhnClientCapability CC
          INNER JOIN rhnClientCapabilityName ccn on cc.capability_name_id = ccn.id
          INNER JOIN rhnUserServerPerms usp on cc.server_id = usp.server_id
      WHERE usp.user_id = :user_id
          AND cc.server_id = :sid
          AND ccn.name LIKE 'scap%'
  </query>
</mode>

<mode name="scans_in_set" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, set_label">
  SELECT tr.id as xid,
      tr.identifier as test_result,
      sa.completion_time as completed
      FROM rhnXccdfTestresult tr,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnSet st
      WHERE tr.id = st.element
          AND st.user_id = :user_id
          AND st.label = :set_label
          AND tr.action_Scap_id = ras.id
          AND sa.server_id = tr.server_id
          AND sa.action_id = ras.action_id
      ORDER BY tr.id DESC
  </query>
</mode>
<mode name="show_system_scans" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="sid">
  SELECT tr.id as xid,
      tr.identifier as test_result,
      sa.completion_time as completed
      FROM rhnXccdfTestresult tr,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE tr.server_id = :sid
          AND tr.action_scap_id = ras.id
          AND sa.server_id = tr.server_id
          AND sa.action_id = ras.action_id
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="latest_testresults_by_user" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id">
  SELECT
      tr.id as xid,
      tr.server_id as sid,
      s.name as server_name,
      xp.identifier as profile,
      sa.completion_time as completed
      FROM rhnUserServerPerms usp,
          rhnXccdfTestresult tr,
          rhnXccdfProfile xp,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnServer s
      WHERE usp.user_id = :user_id
          AND usp.server_id = tr.server_id
          AND sa.server_id = tr.server_id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND tr.profile_id = xp.id
          AND s.id = tr.server_id
      ORDER BY completed DESC
  </query>
</mode>

<mode name="latest_testresults_by_server" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <query params="user_id, sid">
  SELECT
      tr.id AS xid,
      xp.identifier AS profile,
      ras.path AS path,
      sa.completion_time AS completed
      FROM rhnUserServerPerms usp,
          rhnXccdfTestresult tr,
          rhnXccdfProfile xp,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE usp.user_id = :user_id
          AND usp.server_id = :sid
          AND usp.server_id = tr.server_id
          AND sa.server_id = tr.server_id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND tr.profile_id = xp.id
      ORDER BY completed DESC
  </query>
</mode>

<query name="testresult_counts" multiple="t" column="xid">
  SELECT tr.id as xid, rrt.label, count(rr.id) as count
  FROM rhnXccdfTestresult tr,
      rhnXccdfRuleresult rr,
      rhnXccdfRuleresultType rrt
  WHERE tr.id in (%s)
      AND tr.id = rr.testresult_id
      AND rr.result_id = rrt.id
  GROUP BY tr.id, rrt.label
</query>

<mode name="show_ruleresults" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="xid">
  SELECT rr.id, rrt.label, rr.testresult_id as test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt
      WHERE rr.testresult_id = :xid
          AND rr.result_id = rrt.id
      ORDER BY rrt.id
  </query>
</mode>

<mode name="ruleresult_by_id" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="rr_id">
  SELECT rr.id, rrt.label, rr.testresult_id as test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt
      WHERE rr.id = :rr_id
          AND rr.result_id = rrt.id
  </query>
</mode>

<mode name="previous_comparable_tr">
  <query params="xid">
  SELECT max(eq.id) as xid
      FROM rhnXccdfTestResult ref,
          rhnXccdfBenchmark refb,
          rhnXccdfTestResult eq,
          rhnXccdfBenchmark eqb
      WHERE ref.id = :xid
          AND eq.id &lt; ref.id
          AND ref.profile_id = eq.profile_id
          AND ref.server_id = eq.server_id
          AND ref.benchmark_id = refb.id
          AND eq.benchmark_id = eqb.id
          AND refb.identifier = eqb.identifier
  </query>
</mode>

<!-- Queries starting with rr_by_idents are binded dynamically
     in ScapManager.searchByIdentIds() method. -->
<mode name="rr_by_idents" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_slabel" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, slabel">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_start_end" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, start, end">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
    FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND sa.server_id = tr.server_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_slabel_start_end" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, slabel, start, end">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND sa.server_id = tr.server_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_result" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, result">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND rrt.label = :result
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_slabel_result" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, slabel, result">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND rrt.label = :result
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_start_end_result" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, start, end, result">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
    FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND sa.server_id = tr.server_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
          AND rrt.label = :result
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="rr_by_idents_slabel_start_end_result" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="user_id, slabel, start, end, result">
  SELECT DISTINCT rr.id, rrt.label, rr.testresult_id AS test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND sa.server_id = tr.server_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
          AND rrt.label = :result
      ORDER BY rr.id DESC
  </query>
</mode>

<mode name="tr_by_idents" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp,
          rhnXccdfProfile xp,
          rhnServer s,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND tr.server_id = sa.server_id
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_slabel" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, slabel">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st,
          rhnXccdfProfile xp,
          rhnServer s,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_start_end" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, start, end">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnXccdfProfile xp,
          rhnServer s
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_slabel_start_end" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, slabel, start, end">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnXccdfProfile xp,
          rhnServer s
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_result" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, result">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnXccdfProfile xp,
          rhnServer s
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
          AND rrt.label = :result
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_slabel_result" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, slabel, result">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnXccdfProfile xp,
          rhnServer s
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
          AND rrt.label = :result
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_start_end_result" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, start, end, result">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestresult tr,
          rhnUserServerPerms usp,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnXccdfProfile xp,
          rhnServer s
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = rr.testresult_id
          AND tr.server_id = usp.server_id
          AND usp.user_id = :user_id
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
          AND rrt.label = :result
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="tr_by_idents_slabel_start_end_result" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id, slabel, start, end, result">
  SELECT DISTINCT tr.id AS xid,
      xp.identifier AS profile,
      tr.server_id as sid,
      s.name as server_name,
      sa.completion_time AS completed
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnXccdfRuleIdentMap rim,
          rhnXccdfTestResult tr,
          rhnSet st,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnXccdfProfile xp,
          rhnServer s
      WHERE rim.ident_id IN (%s)
          AND rim.rresult_id = rr.id
          AND rr.result_id = rrt.id
          AND tr.id = testresult_id
          AND tr.server_id = st.element
          AND st.user_id = :user_id
          AND st.label = :slabel
          AND tr.profile_id = xp.id
          AND tr.server_id = s.id
          AND tr.action_scap_id = ras.id
          AND tr.server_id = sa.server_id
          AND sa.action_id = ras.action_id
          AND sa.completion_time &gt;= :start
          AND sa.completion_time &lt;= :end
          AND rrt.label = :result
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="idents_per_ruleresult" class="com.redhat.rhn.frontend.dto.XccdfIdentDto">
  <query params="rr_id">
  SELECT xi.id, xi.identifier, xis.system
      FROM rhnXccdfRuleIdentMap rim,
          rhnXccdfIdent xi,
          rhnXccdfIdentSystem xis
      WHERE rim.rresult_id = :rr_id
          AND rim.ident_id = xi.id
          AND xi.identsystem_id = xis.id
      ORDER BY xis.system, xi.identifier
  </query>
</mode>

<mode name="scap_capable_systems_in_set">
  <query params="user_id, set_label">
  SELECT DISTINCT usp.server_id AS id
      FROM rhnUserServerPerms usp
          INNER JOIN rhnSet st ON st.user_id = usp.user_id
              AND st.element = usp.server_id
      WHERE st.user_id = :user_id
          AND st.label = :set_label
          AND EXISTS (
              SELECT 1
                  FROM rhnClientCapability cc
                      INNER JOIN rhnClientCapabilityName ccn ON cc.capability_name_id = ccn.id
                  WHERE cc.server_id = usp.server_id
                      AND ccn.name LIKE 'scap%'
          )
  </query>
</mode>

<mode name="is_available_to_user">
  <query params="user_id, xid">
  SELECT 1
      FROM rhnXccdfTestResult tr,
          rhnUserServerPerms usp
      WHERE tr.id = :xid
          AND usp.server_id = tr.server_id
          AND usp.user_id = :user_id
  </query>
</mode>

<mode name="systems_in_set_and_scap_capability">
  <query params="user_id, set_label">
  SELECT DISTINCT s.id AS sid,
      s.name AS name,
      (SELECT 1
          FROM rhnClientCapability cc
              INNER JOIN rhnClientCapabilityName ccn ON cc.capability_name_id = ccn.id
          WHERE cc.server_id = usp.server_id
              AND ccn.name LIKE 'scap%'
      ) AS scap
      FROM rhnUserServerPerms usp
          INNER JOIN rhnSet st ON st.user_id = usp.user_id
              AND st.element = usp.server_id
          INNER JOIN rhnServer s ON s.id = usp.server_id
      WHERE st.user_id = :user_id
          AND st.label = :set_label
      ORDER BY name ASC
  </query>
</mode>

<mode name="result_type_labels">
  <query>
  SELECT label
      FROM rhnXccdfRuleresultType
  </query>
</mode>

<callable-mode name="lookup_xccdf_ident">
    <query params="system_in, identifier_in">
        {:ident_id = call lookup_xccdf_ident(:system_in, :identifier_in)}
    </query>
</callable-mode>

<callable-mode name="lookup_xccdf_benchmark">
    <query params="identifier_in, version_in">
        {:benchmark_id = call lookup_xccdf_benchmark(:identifier_in, :version_in)}
    </query>
</callable-mode>

<callable-mode name="lookup_xccdf_profile">
    <query params="identifier_in, title_in">
        {:profile_id = call lookup_xccdf_profile(:identifier_in, :title_in)}
    </query>
</callable-mode>

</datasource_modes>
