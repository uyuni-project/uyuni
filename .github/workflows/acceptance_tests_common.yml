name: acceptance-tests-common
on:
  workflow_call:
    inputs:
      secondary_tests:
        required: true
        type: string
      server_id:
        required: true
        type: string
env:
  UYUNI_PROJECT: uyuni-project
  UYUNI_VERSION: master
  CUCUMBER_PUBLISH_TOKEN: ${{ secrets.CUCUMBER_PUBLISH_TOKEN }}
jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      require_acceptance_tests: ${{ steps.filter.outputs.require_acceptance_tests }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            require_acceptance_tests:
              - 'java/**'
              - 'web/html/src/**'
              - 'testsuite/**'
              - '!.github/workflows/**'
  test-uyuni:
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.require_acceptance_tests == 'true'
    steps:
      - name: fix podman
        run: sudo apt install podman=3.4.4+ds1-1ubuntu1 --allow-downgrades
      - name: welcome_message
        run: echo "Running acceptance tests. More info at https://github.com/uyuni-project/uyuni/wiki/Running-Acceptance-Tests-at-PR"
      - uses: actions/checkout@v4
      - name: Cache-jar-files
        uses: actions/cache@v3
        with:
          path: java/buildconf/ivy/repository/
          key: ${{ runner.os }}-build-cache-uyuni-jars-${{ hashFiles('**/java/buildconf/ivy/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-uyuni-jars-

      - name: Cache-obs-to-maven files
        uses: actions/cache@v3
        with:
          path: java/.obs-to-maven-cache
          key: ${{ runner.os }}-build-cache-uyuni-obs-to-maven-${{ hashFiles('**/java/buildconf/ivy/obs-maven-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-uyuni-obs-to-maven-
      - name: Cache-nodejs
        uses: actions/cache@v3
        with:
          path: web/html/src/node_modules
          key: ${{ runner.os }}-build-cache-uyuni-nodejs-${{ hashFiles('**/web/html/src/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-uyuni-nodejs-
      - name: create_tmp
        run: ./testsuite/podman_runner/01_setup_tmp_dirs.sh
      - name: create-podman-network
        run: ./testsuite/podman_runner/02_setup_network.sh
      - name: start_controller
        run: ./testsuite/podman_runner/03_run_controller.sh 
      - name: create_ssh_conf
        run: ./testsuite/podman_runner/04_setup_ssh_controller.sh 
      - name: install_gems_in_controller
        run: ./testsuite/podman_runner/05_install_gems_in_controller.sh
      - name: collect_and_tag_flaky_tests_in_controller
        # Until we refactor the usage of the secret, it only runs on uyuni-project/uyuni repository branches
        if: github.repository == 'uyuni-project/uyuni'
        run: ./testsuite/podman_runner/06_collect_and_tag_flaky_tests_in_controller.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_GALAXY_CI }}
      - name: start-server-container
        run: ./testsuite/podman_runner/07_start_server.sh
      - name: mgr-setup
        run: ./testsuite/podman_runner/08_manager_setup.sh
      - name: build_code
        run: ./testsuite/podman_runner/09_build_server_code.sh
#     - name: copy_ca
#     run: podman exec uyuni-server-all-in-one-test bash -c "cp /etc/pki/tls/certs/spacewalk.crt /tmp"
#     - name: update_ca_in_controller
#       run: podman exec controller-test bash -c "cat /tmp/spacewalk.crt >> /etc/ssl/ca-bundle.pem"
      - name: sle-sshminion
        run: ./testsuite/podman_runner/10_run_sshminion.sh
      - name: test_from_host
        run: curl --insecure https://localhost:8443/rhn/help/Copyright.do
      - name: test_from_container
        run: sudo -i podman exec opensusessh curl --insecure https://uyuni-server-all-in-one-test:443/rhn/help/Copyright.do
      - name: setup_sshd
        run: ./testsuite/podman_runner/11_setup_sshd.sh
      - name: run_cucumber_core
        run: ./testsuite/podman_runner/12_run_core_tests.sh
      - name: sle-salt-minion
        run: ./testsuite/podman_runner/13_run_salt_sle_minion.sh
      - name: rhlike-minion
        run: ./testsuite/podman_runner/14_run_salt_rhlike_minion.sh
      - name: deblike-minion
        run: ./testsuite/podman_runner/15_run_salt_deblike_minion.sh
      - name: accept_keys
        run: ./testsuite/podman_runner/16_accept_all_keys.sh
      - name: run_cucumber_clients
        run: ./testsuite/podman_runner/17_run_init_clients_tests.sh
      - name: split_secondary
        run: ./testsuite/podman_runner/19_split_secondary_p_tests.sh
      - name: run_secondary_tests
        run: ./testsuite/podman_runner/${{ inputs.secondary_tests }} 
      - name: get_server_logs
        if: ${{ failure() }}
        run: ./testsuite/podman_runner/20_get_server_logs.sh ${{ inputs.server_id }}
      - name: get_client_logs
        if: ${{ failure() }}
        run: ./testsuite/podman_runner/21_get_client_logs.sh ${{ inputs.server_id }}
      - name: upload_server_log_artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: server_rhn_logs_${{ inputs.server_id }}
          path: /tmp/test-all-in-one/server-logs/${{ inputs.server_id }}
      - name: upload_client_log_artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: client_logs_${{ inputs.server_id }}
          path: ./testsuite/logs

