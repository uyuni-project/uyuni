/*
 * Copyright (c) 2024 SUSE LLC
 *
 * This software is licensed to you under the GNU General Public License,
 * version 2 (GPLv2). There is NO WARRANTY for this software, express or
 * implied, including the implied warranties of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
 * along with this software; if not, see
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
 *
 * Red Hat trademarks are not licensed under GPLv2. No permission is
 * granted to use or replicate Red Hat trademarks that are incorporated
 * in this software or its documentation.
 */

CREATE TABLE IF NOT EXISTS suseOVALOsProduct
(
    id          NUMERIC NOT NULL
        CONSTRAINT suse_oval_os_product_id_pk PRIMARY KEY,
    os_family   VARCHAR NOT NULL,
    version     VARCHAR NOT NULL
);

CREATE SEQUENCE IF NOT EXISTS suse_oval_os_product_id_seq;

CREATE UNIQUE INDEX IF NOT EXISTS suse_oval_os_family_version_uq
    ON suseOVALOsProduct(os_family, version);

/*
* This block checks if the 'product_os_id' column exists in the suseOVALPlatformVulnerablePackage table.
* If the column does not exist, it truncates the table, restarts the identity sequence,
* and adds the product_os_id column as a NOT NULL type.
*/
DO $$
    BEGIN
        IF NOT EXISTS (
            SELECT 1
            FROM information_schema.columns
            WHERE table_name = 'suseovalplatformvulnerablepackage' AND column_name = 'product_os_id'
        ) THEN
            TRUNCATE suseOVALPlatformVulnerablePackage RESTART IDENTITY;
            -- noinspection SqlAddNotNullColumn
            ALTER TABLE suseOVALPlatformVulnerablePackage
                ADD COLUMN product_os_id NUMERIC NOT NULL;
        END IF;
    END $$;

ALTER TABLE suseOVALPlatformVulnerablePackage
    DROP CONSTRAINT suse_oval_platform_vulnerable_pkg_id_pk;
ALTER TABLE suseOVALPlatformVulnerablePackage
    ADD CONSTRAINT suse_oval_platform_vulnerable_pkg_id_pk PRIMARY KEY (product_os_id, platform_id, cve_id, vulnerable_pkg_id);