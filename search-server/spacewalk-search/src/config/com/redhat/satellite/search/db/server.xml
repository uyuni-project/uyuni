<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed Dec 04 11:26:12 CET 2013-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="server">
    <select id="getServerByIdOrDate" parameterType="java.util.Map" resultType="com.redhat.satellite.search.db.models.Server">
            SELECT
                s.id as id,
                s.name as name,
                s.description as description,
                s.info as info,
                s.created as registered,
                s.running_kernel as runningKernel,
                sl.machine as machine,
                sl.rack as rack,
                sl.room as room,
                sl.building as building,
                sl.address1 as address1,
                sl.address2 as address2,
                sl.city as city,
                sl.state as state,
                sl.country as country,
                rsn.hostname as hostname,
                rsn.ipaddr as ipaddr,
                rsn.ip6addr as ip6addr,
                dmi.vendor as dmiVendor,
                dmi.system as dmiSystem,
                dmi.product as dmiProduct,
                dmi.bios_vendor as dmiBiosVendor,
                dmi.bios_version as dmiBiosVersion,
                dmi.bios_release as dmiBiosRelease,
                dmi.asset as dmiAsset,
                dmi.board as dmiBoard,
                cpu.bogomips as cpuBogoMIPS,
                cpu.cache as cpuCache,
                cpu.family as cpuFamily,
                cpu.mhz as cpuMHz,
                cpu.stepping as cpuStepping,
                cpu.flags as cpuFlags,
                cpu.model as cpuModel,
                cpu.version as cpuVersion,
                cpu.vendor as cpuVendor,
                cpu.nrcpu as cpuNumberOfCpus,
                cpu.acpiversion as cpuAcpiVersion,
                cpu.apic as cpuApic,
                cpu.apmversion as cpuApmVersion,
                cpu.chipset as cpuChipset,
                si.checkin as checkin,
                rr.ram as ram,
                rr.swap as swap,
                vi.uuid as uuid
            FROM rhnServer s
                LEFT OUTER JOIN rhnServerNetwork rsn ON s.id = rsn.server_id
                LEFT OUTER JOIN rhnServerInfo si on s.id = si.server_id
                LEFT OUTER JOIN rhnRam rr on s.id = rr.server_id
                LEFT OUTER JOIN rhnServerLocation sl ON s.id = sl.server_id
                LEFT OUTER JOIN rhnServerDmi dmi ON s.id = dmi.server_id
                LEFT OUTER JOIN rhnCPU cpu on s.id = cpu.server_id
                LEFT OUTER JOIN rhnVirtualInstance vi on s.id = vi.virtual_system_id
            WHERE s.modified &gt;= #{last_modified}
                or rsn.modified &gt;= #{last_modified}
                or si.checkin &gt;= #{last_modified}
                or rr.modified &gt;= #{last_modified}
                or sl.modified &gt;= #{last_modified}
                or dmi.modified &gt;= #{last_modified}
                or cpu.modified &gt;= #{last_modified}
                or s.id &gt; #{id}
            ORDER by s.id ASC
    </select>

   <delete id="deleteLastServer">
                DELETE FROM rhnIndexerWork where object_type = 'server'
   </delete>
   <insert id="createLastServer" parameterType="java.util.Map">
		INSERT INTO rhnIndexerWork values ('server', #{id}, #{last_modified})
	</insert>
	<update id="updateLastServer" parameterType="java.util.Map">
		UPDATE rhnIndexerWork SET last_id = #{id}, last_modified = #{last_modified} where object_type = 'server'
	</update>
	<select id="getLastServerId" resultType="java.lang.Long">
		SELECT last_id from rhnIndexerWork where object_type='server'
	</select>
	<select id="getLastServerIndexRun" resultType="java.util.Date">
        SELECT last_modified from rhnIndexerWork where object_type='server'
    </select>
	<select id="verifyServerVisibility" resultType="string">
        SELECT DISTINCT s.id
        FROM rhnServer s
            INNER JOIN rhnUserServerPerms usp ON s.id = usp.server_id
            INNER JOIN pxtsessions ps ON ps.web_user_id = usp.user_id
        WHERE ps.id = #{session_id}
        AND s.id IN
		 <foreach collection="id_list" item="item" separator="," close=")" open="(">
		    #{item}
		</foreach>
	</select>   		   
    <select id="maxServerId" resultType="java.lang.Long">
        SELECT MAX(ID)
          FROM rhnServer
    </select>
    <select id="queryAllServerIds" resultType="Long">
        SELECT id from rhnServer
    </select>
</mapper>
