name: acceptance-tests-base
on:
  workflow_call:
    inputs:
      tests:
        required: true
        type: string
      server_id:
        required: true
        type: string
      skip_tests:
        description: "Mechanism to skip the steps, but not the jobs, so we can have a status check passing."
        required: true
        type: boolean
      recommended_tests:
        description: "List of recommended tests. Optional."
        required: false
        type: string

env:
  UYUNI_PROJECT: uyuni-project
  UYUNI_VERSION: master
  NO_AUTH_REGISTRY: "noauthregistry.lab"
  CUCUMBER_PUBLISH_TOKEN: ${{ secrets.CUCUMBER_PUBLISH_TOKEN }}
  AUTH_REGISTRY: "authregistry.lab"
  AUTH_REGISTRY_CREDENTIALS: "cucutest|cucutest"

jobs:
  filter-paths:
    runs-on: ubuntu-latest
    outputs:
      java: ${{ steps.filter.outputs.java }}
      web: ${{ steps.filter.outputs.web }}
      testsuite: ${{ steps.filter.outputs.testsuite }}
      not_bv_validation: ${{ steps.bv_filter.outputs.not_build_validation }}
      require_acceptance_tests: ${{ steps.filter.outputs.java == 'true' || steps.filter.outputs.web == 'true' || ( steps.filter.outputs.testsuite == 'true' && steps.bv_filter.outputs.not_build_validation == 'true' ) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: filter
        with:
          predicate-quantifier: 'some'
          filters: |
            java:
              - 'java/**'
            web:
              - 'web/html/src/**'
            testsuite:
              - 'testsuite/**'
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: bv_filter
        with:
          predicate-quantifier: 'every'
          filters: |
            not_build_validation:
              - 'testsuite/**'
              - '!testsuite/features/build_validation/**'
  tests:
    name: Run
    runs-on: ubuntu-24.04
    needs: filter-paths
    steps:
      - name: Skipping tests
        if: ${{ inputs.skip_tests }}
        run: |
          echo "Skipping tests."
          echo "This is a workaround to avoid running the tests, but still have a passing status check."
          echo "The job will be marked as success, but the steps will be skipped."
      - name: Install Podman
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: sudo apt install podman

      - name: Install Python dependencies
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: pip install pyyaml

      - name: Welcome message
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: echo "Running acceptance tests. More info at https://github.com/uyuni-project/uyuni/wiki/Running-Acceptance-Tests-at-PR"

      - name: Checkout repository
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Cache jar files
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf #v4.2.2
        with:
          path: java/buildconf/ivy/repository/
          key: ${{ runner.os }}-build-cache-uyuni-jars-${{ hashFiles('**/java/buildconf/ivy/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-uyuni-jars-

      - name: Cache obs-to-maven files
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf #v4.2.2
        with:
          path: java/.obs-to-maven-cache
          key: ${{ runner.os }}-build-cache-uyuni-obs-to-maven-${{ hashFiles('**/java/buildconf/ivy/obs-maven-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-uyuni-obs-to-maven-

      - name: Cache NodeJS modules
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf #v4.2.2
        with:
          path: web/html/src/node_modules
          key: ${{ runner.os }}-build-cache-uyuni-nodejs-${{ hashFiles('**/web/html/src/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-uyuni-nodejs-

      - name: Create temporary directories
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/01_setup_tmp_dirs.sh

      - name: Create Podman network
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/02_setup_network.sh

      - name: Start controller, registry and build host
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/03_run_controller_and_registry_and_buildhost.sh

      - name: Create SSH configuration in controller
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/04_setup_ssh_controller.sh

      - name: Parse recommended tests coming from the input as XML
        if: ${{ !inputs.skip_tests && inputs.recommended_tests != '' && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: python .github/scripts/get_tests.py '${{ inputs.recommended_tests }}' > testsuite/run_sets/filter.yml

      - name: Generate recommended tests as YAML
        if: ${{ !inputs.skip_tests && inputs.recommended_tests != '' && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/19_generate_recommended_tests_yml.sh

      - name: Install gems in controller
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/05_install_gems_in_controller.sh

      - name: Collect and tag flaky tests in controller
        # Until we refactor the usage of the secret, it only runs on uyuni-project/uyuni repository branches
        if: ${{ !inputs.skip_tests && github.repository == 'uyuni-project/uyuni'  && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/06_collect_and_tag_flaky_tests_in_controller.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_GALAXY_CI }}

      - name: Setup server container
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/07_server_setup.sh

      - name: Start server container
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/08_start_server.sh

      - name: Build server code
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/09_build_server_code.sh
      #     - name: copy_ca
      #     run: podman exec server bash -c "cp /etc/pki/tls/certs/spacewalk.crt /tmp"
      #     - name: update_ca_in_controller
      #       run: podman exec controller bash -c "cat /tmp/spacewalk.crt >> /etc/ssl/ca-bundle.pem"

      - name: Run SSH minion container
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/10_run_sshminion.sh

      - name: Test access to server from controller
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: curl --insecure https://localhost:8443/rhn/help/Copyright.do

      - name: Test access to server from SSH minion
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: sudo -i podman exec opensusessh curl --insecure https://server:443/rhn/help/Copyright.do

      - name: Configure SSHD in controller, server, build host and SSH minion
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/11_setup_sshd.sh

      - name: Run and configure Salt Minion container
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/12_run_salt_sle_minion.sh

      - name: Run and configure RH-Like Minion container
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/13_run_salt_rhlike_minion.sh

      - name: Run and configure Deb-Like Minion container
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/14_run_salt_deblike_minion.sh

      - name: Run Core tests
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/15_run_core_tests.sh

      - name: Accept all keys
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/16_accept_all_keys.sh

      - name: Run init clients
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/17_run_init_clients_tests.sh

      - name: Split tests into multiple YAML files
        if: ${{ !inputs.skip_tests && contains(inputs.server_id, 'additional') && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/23_split_secondary_p_tests.sh

      - name: Run acceptance tests
        if: ${{ !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/${{ inputs.tests }}

      - name: Get server logs
        if: ${{ failure() && !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true'}}
        run: ./testsuite/podman_runner/24_get_server_logs.sh ${{ inputs.server_id }}

      - name: Get client logs
        if: ${{ failure() && !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        run: ./testsuite/podman_runner/25_get_client_logs.sh ${{ inputs.server_id }}

      - name: Upload server log artifacts
        if: ${{ failure() && !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #v4.6.1
        with:
          name: server_rhn_logs_${{ inputs.server_id }}
          path: /tmp/testing/server-logs/${{ inputs.server_id }}

      - name: Upload client log artifacts
        if: ${{ failure() && !inputs.skip_tests && needs.filter-paths.outputs.require_acceptance_tests == 'true' }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #v4.6.1
        with:
          name: client_logs_${{ inputs.server_id }}
          path: ./testsuite/logs
