<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"classpath://org/hibernate/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
        <class name="com.redhat.rhn.domain.rhnpackage.profile.Profile"
                table="rhnServerProfile">
                <id name="id" type="long" column="id">
            <meta attribute="scope-set">protected</meta>
            <generator class="sequence">
                <param name="sequence">RHN_SERVER_PROFILE_ID_SEQ</param>
            </generator>
                </id>
                <property name="name" column="name" type="string" length="128" />
                <property name="description" column="description" type="string" length="256" />
                <property name="info" column="info" type="string" length="128" />
        <property name="created" column="created" type="timestamp" insert="false" update="false" />
        <property name="modified" column="modified" type="timestamp" insert="false" update="false" />

                <many-to-one name="org"
                     class="com.redhat.rhn.domain.org.Org"
                     column="org_id"/>

        <many-to-one name="baseChannel"
                     class="com.redhat.rhn.domain.channel.Channel"
                     column="base_channel"/>

        <many-to-one name="profileType"
                     class="com.redhat.rhn.domain.rhnpackage.profile.ProfileType"
                     column="profile_type_id"/>

        <set name="packageEntries" inverse="true" cascade="all">
            <key column="server_profile_id"/>
            <one-to-many class="com.redhat.rhn.domain.rhnpackage.profile.ProfileEntry"/>
        </set>
        </class>

    <query name="Profile.findByIdAndOrg">
        <![CDATA[from com.redhat.rhn.domain.rhnpackage.profile.Profile as p
                where p.id = :id and org_id=:org_id]]>
    </query>
    <sql-query name="Profile.compatibleWithServer">
        <![CDATA[SELECT DISTINCT {p.*}
  FROM rhnServer S,
       rhnServerProfile P
 WHERE P.org_id = S.org_id
   AND S.id = :sid
   AND P.profile_type_id = (SELECT id FROM rhnServerProfileType WHERE label = 'normal')
   AND (EXISTS (SELECT 1
                 FROM rhnServerChannel SC
                WHERE SC.server_id = S.id
                  AND SC.channel_id = P.base_channel)
       OR EXISTS (SELECT 1
                    FROM rhnChannel C
                   WHERE C.id = P.base_channel
                     AND C.org_id = :org_id
                     AND C.parent_channel IS NULL) ) order by P.name
                     ]]>
        <return alias="p" class="com.redhat.rhn.domain.rhnpackage.profile.Profile" />
    </sql-query>
    <sql-query name="Profile.findByNameAndOrgId">
        <![CDATA[SELECT {p.*}
         FROM rhnServerProfile P
        WHERE P.name = :name
          AND P.org_id = :org_id]]>
         <return alias="p" class="com.redhat.rhn.domain.rhnpackage.profile.Profile" />
    </sql-query>
</hibernate-mapping>
