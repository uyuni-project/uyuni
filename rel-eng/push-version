#!/bin/bash
SCRIPT=$(basename ${0})
BASE_DIR=$(dirname "${0}")

function usage() {
    cat <<EOF
Push SPEC versions

Syntax:

${SCRIPT} <ARGUMENTS>

  --version=<NEW_VERSION>          Format X.Y
  --bugzilla=<BUGZILLA_REFERENCE>  Format bsc#XXXXXXX
EOF
}

function print_incorrect_syntax() {
  echo "ERROR: Invalid usage options (use -h for help)"
}

function print_incorrect_format() {
  echo "ERROR: Invalid format for '${1}' (use -h for help)"
}

ARGS=$(getopt -o h --long help,version:,bugzilla: -n "${SCRIPT}" -- "$@")
if [ $? -ne 0 ];
then
  print_incorrect_syntax
  exit 1
fi
eval set -- "${ARGS}"
while true ; do
  case "${1}" in
    -h|--help)  usage; exit 1;;
    --version)  VERSION="${2}.0"; shift 2;;
    --bugzilla) BUGZILLA="${2}"; shift 2;;
    --) shift ; break ;;
    *) print_incorrect_syntax; exit 1;;
  esac
done

if [ "${VERSION}" == "" -o "${BUGZILLA}" == "" ]; then
  print_incorrect_syntax
  exit 1
fi

if [ "$(echo ${VERSION}|grep -E '^[0-9]+\.[0-9]+\.0$')" == "" ]; then
  print_incorrect_format "--version"
  exit 1
fi

if [ "$(echo ${BUGZILLA}|grep -E '^bsc#[0-9]+$')" == "" ]; then
  print_incorrect_format "--bugzilla"
  exit 1
fi

for PACKAGE in $(ls packages/); do
  PACKAGE=$(basename ${PACKAGE})
  PACKAGE_PATH="../$(cat packages/${PACKAGE}|cut -d' ' -f2)/${PACKAGE}"
  PACKAGE_SPEC="${PACKAGE_PATH}.spec"
  PACKAGE_CHANGES="${PACKAGE_PATH}.changes"
  echo "############ Package ${PACKAGE} ############"
  echo "*** Adapting SPEC ${PACKAGE_SPEC}..."
  if [ "$(grep -E '^Version: *[^ ]+$' ${PACKAGE_SPEC})" != "" ]; then
    sed -i -r "s/^(Version: *)(.+)$/\1${VERSION}/" ${PACKAGE_SPEC}
    echo "*** Adapting changelog ${PACKAGE_CHANGES}..."
    if [ "$(head -n1 ${PACKAGE_CHANGES}|grep -E '^-{2,}$')" != "" ]; then
      sed -i '1s/^/\n/' ${PACKAGE_CHANGES}
    fi
    sed -i "1s/^/- Bump version to ${VERSION} (${BUGZILLA})\n/" ${PACKAGE_CHANGES}
  fi
done

echo "############ ALL DONE ############"
echo "*** Review if the log has any errors"
echo "*** Consider reviewing the Requires and BuildRequires, if the old version is 4.0.X, try:"
echo "    grep -ir 'require' ../ |grep '4\.0'|grep -v 'rhn-package-78527.xml'|grep -v 'yarn-1.14.0.js'"
echo "    To find possible candidates"
