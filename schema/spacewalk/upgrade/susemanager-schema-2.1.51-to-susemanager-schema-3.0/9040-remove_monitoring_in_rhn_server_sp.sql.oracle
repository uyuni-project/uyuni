procedure insert_into_servergroup (
            server_id_in in number,
            server_group_id_in in number
) is
            used_slots number;
            max_slots number;
            org_id number;
            mgmt_available number;
            mgmt_upgrade number;
            mgmt_sgid number;
            prov_available number;
            prov_upgrade number;
            prov_sgid number;
            group_label rhnServerGroupType.label%TYPE;
            group_type number;
    begin
            -- frist, group_type = null, because it's easy...

            -- this will rowlock the servergroup we're trying to change;
            -- we probably need to lock the other one, but I think the chances
            -- of it being a real issue are very small for now...
            select	sg.group_type, sg.org_id, sg.current_members, sg.max_members
            into	group_type, org_id, used_slots, max_slots
            from	rhnServerGroup sg
            where	sg.id = server_group_id_in
            for update of sg.current_members;

            if group_type is null then
                    if used_slots >= max_slots then
                            rhn_exception.raise_exception('servergroup_max_members');
                    end if;

                    insert into rhnServerGroupMembers(
                                    server_id, server_group_id
                            ) values (
                                    server_id_in, server_group_id_in
                            );
                    update rhnServerGroup
                            set current_members = current_members + 1
                            where id = server_group_id_in;

                    rhn_cache.update_perms_for_server_group(server_group_id_in);
                    return;
            end if;

            -- now for group_type != null
            -- 
            select	label
            into	group_label
            from	rhnServerGroupType	sgt
            where	sgt.id = group_type;

            -- the naive easy path that gets hit most often and has to be quickest.
            if group_label in ('sw_mgr_entitled',
                       'enterprise_entitled',
                       'bootstrap_entitled',
                       'provisioning_entitled',
                       'virtualization_host',
                       'virtualization_host_platform') then
                    if used_slots >= max_slots and 
           (can_server_consume_virt_slot(server_id_in, group_label) != 1) 
           then
                            rhn_exception.raise_exception('servergroup_max_members');
                    end if;

                    insert into rhnServerGroupMembers(
                                    server_id, server_group_id
                            ) values (
                                    server_id_in, server_group_id_in
                            );

        -- Only update current members if the system in consuming a 
        -- physical slot.
        if can_server_consume_virt_slot(server_id_in, group_label) = 0 then
            update rhnServerGroup
            set current_members = current_members + 1
            where id = server_group_id_in;
        end if;                

                    return;
            end if;
    end;

procedure delete_from_servergroup (
    server_id_in in number,
            server_group_id_in in number
) is
    cursor server_virt_groups is
        select 1
        from rhnServerEntitlementVirtual sev
        where sev.server_id = server_id_in
        and sev.server_group_id = server_group_id_in;

            oid number;
            mgmt_sgid number;
            label rhnServerGroupType.label%TYPE;
            group_type number;
    begin
            begin
                    select	sg.group_type, sg.org_id
                    into	group_type,	oid
                    from	rhnServerGroupMembers	sgm,
                                    rhnServerGroup			sg
                    where	sg.id = server_group_id_in
                            and sg.id = sgm.server_group_id
                            and sgm.server_id = server_id_in
                    for update of sg.current_members;
            exception
                    when no_data_found then
                            rhn_exception.raise_exception('server_not_in_group');
            end;

            -- do group_type is null first
            if group_type is null then
                    delete from rhnServerGroupMembers
                            where server_group_id = server_group_id_in
                            and	server_id = server_id_in;
                    update rhnServerGroup
                            set current_members = current_members - 1
                            where id = server_group_id_in;
                    rhn_cache.update_perms_for_server_group(server_group_id_in);
                    return;
            end if;

            select	sgt.label
            into	label
            from	rhnServerGroupType sgt
            where	sgt.id = group_type;

            if label in ('sw_mgr_entitled',
                 'enterprise_entitled',
                 'bootstrap_entitled',
                 'provisioning_entitled', 
                 'virtualization_host',
                 'virtualization_host_platform') then

        -- Only update current members if the system is consuming
        -- a physical slot.
        for server_virt_group in server_virt_groups loop                
            delete from rhnServerGroupMembers
            where server_group_id = server_group_id_in
            and	server_id = server_id_in;
            return;
        end loop;                

        delete from rhnServerGroupMembers
        where server_group_id = server_group_id_in
        and	server_id = server_id_in;

        update rhnServerGroup
        set current_members = current_members - 1
        where id = server_group_id_in;

            end if;
    end;

    procedure delete_set_from_servergroup (
            server_group_id_in in number,
            user_id_in in number,
            set_label_in in varchar2
    ) is
            cursor servergroups is
                    select	sgm.server_id, sgm.server_group_id
                    from	rhnSet st,
                                    rhnServerGroupMembers sgm
                    where	sgm.server_group_id = server_group_id_in
                            and st.user_id = user_id_in
                            and st.label = set_label_in
                            and sgm.server_id = st.element
                            and exists (
                                    select	1
                                    from	rhnUserManagedServerGroups usgp
                                    where	usgp.server_group_id = server_group_id_in
                                            and usgp.user_id = user_id_in
                            );
    begin
            for sgm in servergroups loop
                    rhn_server.delete_from_servergroup(sgm.server_id, server_group_id_in);
            end loop;
    end delete_set_from_servergroup;
