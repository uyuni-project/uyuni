# The default repository and image version if not defined otherwise
repository: registry.opensuse.org/uyuni
version: latest

## Allows to override the default URI for an image if defined
## Requires a full URI in a form of <registry>/<image>:<version-tag>
##
images:
    # server: <registry>/<image>/<version>


## Ref: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
##
pullPolicy: "IfNotPresent"

## registrySecret defines the name of secret to use to pull the images from the
## registry with authentication. Leave empty for no authentication.
registrySecret: ""

## uyuni server overall Persistent Volume access modes
## Must match those of existing PV or dynamic provisioner
## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
accessModes:
  - ReadWriteOnce

## If defined, storageClassName: <storageClass>
## If set to "-", storageClassName: "", which disables dynamic provisioning
## If undefined (the default) or set to null, no storageClassName spec is
##   set, choosing the default provisioner.  (gp2 on AWS, standard on
##   GKE, AWS & OpenStack)
##
# storageClass: "-"

## matchPvByLabel adds selectors on each claim to select a PV with a 'data' label matching the PVC name.
## This can be helpful for static PV management.
matchPvByLabel: false

## mirror defines a volume or host path to mount in the container as server.susemanager.fromdir value.
## Use either claimName or hostPath to reference the volume source.
##
## When using claimName, both claims and PVs need to be defined before running the chart
## Note that hostPath will not work on multi-node cluster
##
## If the value is set before the first run of the server, the rhn.conf file will be adjusted during the setup.
#mirror:
#  claimName: mirror
#  hostPath: /srv/mirror

# Customize the volume sizes with the volumes dictionary.
# The keys are the volume names.
# TODO Allow setting different storage class per volume
#volumes:
#  var-pgsql:
#    size: 50Gi
#  var-spacewalk:
#    size: 100Gi

## servicesAnnotations are annotations to set on both TCP and UDP services.
## This can be useful to share the same IP when using metallb
# servicesAnnotations:

## exposeJavaDebug will expose the 8001, 8002 and 8003 ports to connect a Java debugger
## to taskomatic, search server and tomcat respectively
# exposeJavaDebug: true

## enableMonitoring will expose the 9100 9187 5556 5557 9500 9800 ports for prometheus to scrape
enableMonitoring: true

ingress:
  ## ingress.type defines the ingress that is used in the cluster.
  ## It can be either "nginx", "traefik" or any other value.
  type: "traefik"
  ## Specify the ingress class name to use. Empty, means that the default one will be used.
  class: ""
  ## annotations can be used to set custom annotations on the created ingress rules.
  ## This can be used to configure another ingress than the ones already wired with the ingress.type.
  ## The ssl annotations can also be used to set a cert-manager issuer like:
  ## ingress:
  ##   annotations:
  ##     ssl:
  ##       cert-manager.io/cluster-issuer: uyuniIssuer
  #annotations:
  #  ssl:
  #  sslRedirect:
  #  nossl:


# The time zone to set in the containers
timezone: "Etc/UTC"

# fqdn is the fully qualified name the server will answer as.
# Changing this value renames the server and changes the server FQDN in the database, handle with care.
# This value is required.
# fqdn: "uyuni.lab.org"

# Email will be the email used for the notifications sent by the server.
email: "admin@uyuni.lab.org"
