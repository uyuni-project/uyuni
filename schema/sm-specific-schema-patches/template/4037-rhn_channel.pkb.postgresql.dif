@@ -1,4 +1,4 @@
--- oracle equivalent source sha1 10eaf6c8fb6cd20874ec411571cea6e1646cac72
+-- oracle equivalent source sha1 67128e02d2f399a11785653c6dc36e36fd372652
 --
 -- Copyright (c) 2008--2013 Red Hat, Inc.
 --
@@ -133,7 +133,8 @@
         IF available_subscriptions IS NULL OR 
            available_subscriptions > 0 or
            rhn_channel.can_server_consume_virt_channl(server_id_in, channel_family_id_val) = 1 OR
-            (available_fve_subs > 0 AND rhn_channel.can_server_consume_fve(server_id_in) = 1)
+           (available_fve_subs > 0 AND rhn_channel.can_server_consume_fve(server_id_in) = 1) OR
+           rhn_channel.server_has_family_subscription(server_id_in, channel_family_id_val) > 0
         THEN
             if rhn_channel.can_server_consume_virt_channl(server_id_in, channel_family_id_val) = 0 AND available_fve_subs > 0 AND rhn_channel.can_server_consume_fve(server_id_in) = 1 THEN
                 is_fve_char := 'Y';
@@ -1266,5 +1267,24 @@
         values (sequence_nextval('rhn_channelcomps_id_seq'), channel_id_in, path_in, to_timestamp(timestamp_in, 'YYYYMMDDHH24MISS'), current_timestamp, current_timestamp);
     end$$ language plpgsql;
 
+CREATE OR REPLACE FUNCTION server_has_family_subscription(server_id_in DECIMAL, 
+                                                          channel_family_id_in DECIMAL) 
+          RETURNS INTEGER AS $$
+  DECLARE
+    fam_entry RECORD;
+
+  BEGIN
+    FOR fam_entry IN SELECT DISTINCT cfm.channel_family_id
+                       FROM rhnchannelfamilymembers AS cfm
+                       JOIN rhnserverchannel AS sc ON sc.channel_id = cfm.channel_id
+                      WHERE sc.server_id = server_id_in
+                        AND cfm.channel_family_id = channel_family_id_in
+    LOOP
+      return 1;
+    END LOOP;
+    RETURN 0;
+  END;
+$$ LANGUAGE plpgsql;
+
 -- restore the original setting
 update pg_settings set setting = overlay( setting placing '' from 1 for (length('rhn_channel')+1) ) where name = 'search_path';
