<datasource_modes>

<mode name="events_in_set">
  <query params="set_label, user_id, sid">
SELECT SA.action_id AS ID,
       AType.name || ' scheduled by ' || COALESCE(U.login, '(none)') AS SUMMARY,
       TO_CHAR(A.earliest_action, 'YYYY-MM-DD HH24:MI:SS') AS SCHEDULED_FOR,
       AType.label AS history_type,
       AType.name AS history_type_name
  FROM rhnActionType AType,
       rhnActionStatus AStat,
       rhnAction A
  LEFT JOIN web_contact U
    ON A.scheduler = U.id,
       rhnServerAction SA,
       rhnSet ST
 WHERE ST.user_id = :user_id
   AND ST.label = :set_label
   AND SA.server_id = :sid
   AND SA.action_id = ST.element
   AND SA.action_id = A.id
   AND AType.id = A.action_type
   AND AStat.id = SA.status
   AND AStat.id = 0
  </query>
</mode>


<mode name="system_events_history">
  <query params="sid">
SELECT EVENT_ID,
       TO_CHAR(CREATED, 'YYYY-MM-DD HH24:MI:SS') CREATED,
       TO_CHAR(PICKED_UP, 'YYYY-MM-DD HH24:MI:SS') PICKED_UP,
       TO_CHAR(COMPLETED, 'YYYY-MM-DD HH24:MI:SS') COMPLETED,
       SUMMARY,
       HISTORY_TYPE,
       HISTORY_TYPE_NAME,
       HISTORY_STATUS
  FROM (SELECT SH.id EVENT_ID,
               SH.summary SUMMARY,
               TO_TIMESTAMP(NULL, NULL) AS created,
               TO_TIMESTAMP(NULL, NULL) AS picked_up,
               SH.created as completed,  -- view this as the "completed" date for sorting reasons
               NULL AS history_status,
               NULL AS history_type,
               NULL AS history_type_name
          FROM rhnServerHistory SH
         WHERE SH.server_id = :sid
         UNION
        SELECT SA.action_id EVENT_ID,
               AType.name || ' scheduled by ' || COALESCE(U.login, '(none)') AS SUMMARY,
               SA.created,
               SA.pickup_time AS picked_up,
               SA.completion_time AS completed,
               AStat.name AS history_status,
               AType.label AS history_type,
               AType.name AS history_type_name
          FROM rhnActionType AType,
               rhnActionStatus AStat,
               rhnAction A
     LEFT JOIN web_contact U
            ON U.id = A.scheduler,
               rhnServerAction SA
         WHERE SA.server_id = :sid
           AND SA.action_id = A.id
           AND ATYPE.id = A.action_type
           AND AStat.id = SA.status
           AND AStat.id IN (1, 2, 3)
       ) X
ORDER BY COMPLETED DESC, PICKED_UP DESC, CREATED DESC, EVENT_ID DESC
  </query>
</mode>

<mode name="system_events_pending">
  <query params="sid">
SELECT SA.action_id AS ID,
               AType.name || ' scheduled by ' || COALESCE(U.login, '(none)') AS SUMMARY,
               TO_CHAR(A.earliest_action, 'YYYY-MM-DD HH24:MI:SS') AS SCHEDULED_FOR,
               AType.label AS history_type,
               AType.name AS history_type_name,
               A.prerequisite AS prereq_aid,
               A.name AS action_name
          FROM rhnActionType AType,
               rhnActionStatus AStat,
               rhnAction A LEFT OUTER JOIN
               web_contact U
            ON U.id = A.scheduler,
               rhnServerAction SA
         WHERE SA.server_id = :sid
           AND SA.action_id = A.id
           AND AType.id = A.action_type
           AND AStat.id = SA.status
           AND AStat.id = 0
ORDER BY SCHEDULED_FOR DESC, ID DESC
  </query>
</mode>




<mode name="supported_system_history">
  <query params="support_sid">
SELECT EVENT_ID, TO_CHAR(CREATED, 'YYYY-MM-DD HH24:MI:SS') CREATED, SUMMARY
  FROM (SELECT SH.id EVENT_ID,
               SH.summary SUMMARY,
               SH.created
          FROM rhnServerHistory SH
         WHERE SH.server_id = :support_sid
         UNION
        SELECT SA.action_id EVENT_ID,
               AType.name || ' scheduled by ' || COALESCE(U.login, '(none)') || ' (' || AStat.name || ')' SUMMARY,
               SA.created
          FROM rhnActionType AType,
               rhnActionStatus AStat,
               rhnAction A
          LEFT JOIN web_contact U
            ON U.id = A.scheduler,
               rhnServerAction SA
         WHERE SA.server_id = :support_sid
           AND SA.action_id = A.id
           AND ATYPE.id = A.action_type
           AND AStat.id = SA.status
       ) X
ORDER BY CREATED DESC, EVENT_ID DESC
  </query>
</mode>

<query name="action_overview_elab" params="user_id, org_id" multiple="t">
SELECT UAO.id,
       UAO.action_status,
       UAO.tally
  FROM rhnUserActionOverview UAO
 WHERE UAO.org_id = :org_id
   AND UAO.user_id = :user_id
   AND UAO.id IN (%s)
</query>

<mode name="pending_action_list">
  <query params="user_id, org_id">
SELECT  DISTINCT UAO.id AS ID,
        TO_CHAR(UAO.earliest_action, 'YYYY-MM-DD HH24:MI:SS') AS EARLIEST,
        UAO.type_name,
        (CASE UAO.action_name WHEN NULL THEN UAO.type_name ELSE UAO.action_name END) AS ACTION_NAME,
        UAO.scheduler
  FROM  rhnUserActionOverview UAO
 WHERE  UAO.org_id = :org_id
   AND  UAO.user_id = :user_id
   AND  UAO.action_status_id IN (0,1)
   AND  UAO.archived = 0
ORDER BY EARLIEST DESC
  </query>

  <elaborator name="action_overview_elab" />
</mode>



<mode name="completed_action_list">
  <query params="user_id, org_id">
SELECT  DISTINCT UAO.id AS ID,
        TO_CHAR(UAO.earliest_action, 'YYYY-MM-DD HH24:MI:SS') AS EARLIEST,
        UAO.type_name,
        (CASE UAO.action_name WHEN NULL THEN UAO.type_name ELSE UAO.action_name END) AS ACTION_NAME,
        UAO.scheduler
  FROM  rhnUserActionOverview UAO
 WHERE  UAO.org_id = :org_id
   AND  UAO.user_id = :user_id
   AND  UAO.action_status_id = 2
   AND  UAO.archived = 0
ORDER BY EARLIEST DESC
  </query>

  <elaborator name="action_overview_elab" />
</mode>



<mode name="failed_action_list">
  <query params="user_id, org_id">
SELECT  DISTINCT UAO.id AS ID,
        TO_CHAR(UAO.earliest_action, 'YYYY-MM-DD HH24:MI:SS') AS EARLIEST,
        UAO.type_name,
        (CASE UAO.action_name WHEN NULL THEN UAO.type_name ELSE UAO.action_name END) AS ACTION_NAME,
        UAO.scheduler
  FROM  rhnUserActionOverview UAO
 WHERE  UAO.org_id = :org_id
   AND  UAO.user_id = :user_id
   AND  UAO.action_status_id  = 3
   AND  UAO.archived = 0
ORDER BY EARLIEST DESC
  </query>

  <elaborator name="action_overview_elab" />
</mode>



<mode name="server_status">
  <query params="aid">
SELECT SA.SERVER_ID AS ID,
       SA.STATUS AS STATUS_ID,
       SA.RESULT_CODE,
       SA.RESULT_MSG,
       SA.PICKUP_TIME,
       SA.COMPLETION_TIME,
       SA.REMAINING_TRIES,
       AST.NAME AS STATUS_NAME
  FROM rhnActionStatus AST, rhnServerAction SA
 WHERE SA.action_id = :aid
   AND SA.status = AST.id
  </query>
</mode>

</datasource_modes>
