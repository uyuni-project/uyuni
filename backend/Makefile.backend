# Makefile for the backend directory
#

SPACEWALK_FILES = __init__
CODE_DIRS = common server upload_server satellite_tools satellite_exporter po wsgi cdn_tools
PYLINT_DIRS = common upload_server satellite_tools satellite_exporter wsgi
CONF_DIRS = apache-conf rhn-conf logrotate

# We look for config files in "well known" locations (rhn-conf,
# httpd-conf, logrotate)
EXTRA_DIRS = /var/log/rhn /var/log/rhn/reposync /var/cache/rhn /var/cache/rhn/satsync

# Docker tests variables
DOCKER_CONTAINER_BASE = suma-head
DOCKER_REGISTRY       = registry.mgr.suse.de
DOCKER_RUN_EXPORT     = "PYTHONPATH=/manager/client/rhel/rhnlib/:/manager/client/rhel/rhn-client-tools/src"
DOCKER_VOLUMES        = -v "$(CURDIR)/../:/manager"


all :: all-code all-conf

%-code : Makefile.backend
	@$(foreach d,$(CODE_DIRS), $(MAKE) -C $(d) $* || exit 1; )

%-conf : Makefile.backend
	@$(foreach d,$(CONF_DIRS), $(MAKE) -C $(d) $* || exit 1; )

# now include some Macros
include Makefile.defs

install :: install-code install-conf

clean :: clean-code clean-conf

test    ::
	$(MAKE) -C common/test/unit-test
	$(MAKE) -C server/test/unit-test

unittest ::
	if test -x /usr/bin/unit2 ; then \
		unit2 discover -s satellite_tools/test/unit; \
		unit2 discover -s common/test/unit-test; \
	else \
		python -munittest discover -s satellite_tools/test/unit; \
		python -munittest discover -s common/test/unit-test; \
	fi

docker_no_db_tests ::
	mkdir -p $(CURDIR)/reports
	@echo "Running satellite_tools/test/unit tests inside of docker $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql container"
	docker run --rm=true -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql nosetests --with-xunit --xunit-file /manager/backend/reports/satellite_tools_tests.xml -s /manager/backend/satellite_tools/test/unit/
	@echo "Running common/test/unit-test inside of docker $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql container"
	docker run --rm=true -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql nosetests --with-xunit --xunit-file /manager/backend/reports/common_tests.xml -s /manager/backend/common/test/unit-test/

docker_pgsql_tests ::
	mkdir -p $(CURDIR)/reports
	@echo "Running Postgresql tests"
	docker run --privileged --rm=true -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql sh -c "/sbin/sysctl -w kernel.shmmax=4067832832; /etc/init.d/postgresql start; nosetests --with-xunit --xunit-file /manager/backend/reports/pgsql_tests.xml /manager/backend/test/runtests-postgresql.py; /etc/init.d/postgresql stop"

docker_oracle_tests ::
	mkdir -p $(CURDIR)/reports
	@echo "Running Oracle tests"
	docker run --privileged --rm=true -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-ora sh -c "/manager/backend/test/oracle-init.sh; nosetests --with-xunit --xunit-file /manager/backend/reports/oracle_tests.xml /manager/backend/test/runtests-oracle.py; /etc/init.d/oracle stop"

docker_pylint ::
	mkdir -p $(CURDIR)/reports
	echo "Running pylint inside of docker $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql container"
	docker run --rm=true -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql /bin/sh -c "cd /manager/backend; pylint --rcfile /manager/spacewalk/pylint/spacewalk-pylint.rc --ignore=test --output-format=parseable --reports=y $(PYLINT_DIRS) > /manager/backend/reports/pylint.log || :"

docker_shell ::
	docker run --rm=true -t -i -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_REGISTRY)/$(DOCKER_CONTAINER_BASE)-pgsql /bin/bash

pylint  ::
# :E0611: *No name %r in module %r*
# :E1101: *%s %r has no %r member*
# :E1102: *%s is not callable*
# :E0203: *Access to member %r before its definition line %s*
# ignore the test/ directory because it is full of brokenness that we don't use
	pylint -e --enable-msg-cat=imports --disable-msg=E0203,E0611,E1101,E1102 --ignore=test $(PYLINT_DIRS) || pylint --errors-only --enable=imports --disable=W,E0203,E0611,E1101,E1102 --ignore=test $(PYLINT_DIRS)
