<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.redhat.rhn.domain.token.Token" table="rhnRegToken">
        <id name="id" type="long" column="id">
            <meta attribute="scope-set">protected</meta>
            <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
                <param name="sequence_name">RHN_REG_TOKEN_SEQ</param>
                <param name="increment_size">1</param>
            </generator>
        </id>
        <property name="note" column="note" type="string" length="2048"/>
        <property name="disabled" column="disabled" type="long"/>
        <property name="deployConfigs" column="deploy_configs" type="yes_no"/>
        <property name="usageLimit" column="usage_limit" type="long"/>

        <many-to-one name="org" class="com.redhat.rhn.domain.org.Org"
            column="org_id"/>

        <many-to-one name="creator"
            class="com.redhat.rhn.domain.user.legacy.UserImpl"
            column="user_id"/>

        <many-to-one name="server" class="com.redhat.rhn.domain.server.Server"
            column="server_id"/>

        <many-to-one name="contactMethod"
            class="com.redhat.rhn.domain.server.ContactMethod"
            column="contact_method_id"/>

        <set name="entitlements" table="rhnRegTokenEntitlement">
            <key column="reg_token_id"/>
            <many-to-many class="com.redhat.rhn.domain.server.ServerGroupType"
                column="server_group_type_id"/>
        </set>

            <set name="channels" table="rhnRegTokenChannels">
            <key column="token_id"/>
            <many-to-many class="com.redhat.rhn.domain.channel.Channel"
                column="channel_id"/>
        </set>

            <set name="serverGroups" table="rhnRegTokenGroups">
            <key column="token_id"/>
            <many-to-many class="com.redhat.rhn.domain.server.ServerGroup"
                column="server_group_id"/>
        </set>

        <set name="packages" inverse="true" cascade="all-delete-orphan">
            <key column="token_id"/>
            <one-to-many class="com.redhat.rhn.domain.token.TokenPackage"/>
        </set>

            <set name="activatedServers" table="rhnServerTokenRegs">
            <key column="token_id"/>
            <many-to-many class="com.redhat.rhn.domain.server.Server"
                column="server_id"/>
        </set>

        <list  name="configChannels" lazy="true" table="rhnRegTokenConfigChannels"
         collection-type="com.redhat.rhn.common.hibernate.ForceRecreationListType">
             <key column="token_id"/>
                    <list-index column="position" base="1"/>
            <many-to-many class="com.redhat.rhn.domain.config.ConfigChannel"
                column="config_channel_id"/>
        </list>

    </class>

    <query name="Token.findById">
        <![CDATA[from com.redhat.rhn.domain.token.Token as t where t.id = :id]]>
    </query>

    <query name="Token.findByIdAndOrg">
        <![CDATA[from com.redhat.rhn.domain.token.Token as t where t.id = :id and t.org = :org]]>
    </query>

    <query name="Token.findByServerAndOrg">
        <![CDATA[from com.redhat.rhn.domain.token.Token as t where t.server = :server
             and t.org = :org]]>
    </query>

</hibernate-mapping>
