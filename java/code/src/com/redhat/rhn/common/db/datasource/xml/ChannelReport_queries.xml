<!--
  ~ Copyright (c) 2022 SUSE LLC
  ~
  ~ This software is licensed to you under the GNU General Public License,
  ~ version 2 (GPLv2). There is NO WARRANTY for this software, express or
  ~ implied, including the implied warranties of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
  ~ along with this software; if not, see
  ~ http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
  ~
  ~ Red Hat trademarks are not licensed under GPLv2. No permission is
  ~ granted to use or replicate Red Hat trademarks that are incorporated
  ~ in this software or its documentation.
  -->
<datasource_modes>


<mode name="Channel" class="">
    <query params="offset, limit">
          SELECT rhnchannel.id AS channel_id
                      , rhnchannel.name
                      , rhnchannel.label
                      , CASE
                          WHEN rhnchannel.org_id IS NULL THEN 'Vendor'
                          ELSE 'Custom'
                        END AS type
                      , rhnchannelarch.label AS arch
                      , rhnchecksumtype.label AS checksum_type
                      , rhnchannel.summary
                      , rhnchannel.description
                      , rhnparentchannel.label AS parent_channel_label
                      , rhnchannelcloned.original_id AS original_channel_id
                      , web_customer.name AS organization
            FROM rhnchannel
                      LEFT JOIN rhnchannelarch ON rhnchannel.channel_arch_id = rhnchannelarch.id
                      LEFT JOIN rhnchecksumtype on rhnchecksumtype.id = rhnchannel.checksum_type_id
                      LEFT JOIN rhnchannel rhnparentchannel ON rhnchannel.parent_channel = rhnparentchannel.id
                      LEFT JOIN rhnchannelcloned ON rhnchannel.id = rhnchannelcloned.id
                      LEFT JOIN web_customer ON rhnchannel.org_id = web_customer.id
        ORDER BY channel_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="ChannelPackage" class="">
    <query params="offset, limit">
          SELECT rhnchannel.id AS channel_id
                      , rhnpackage.id AS package_id
            FROM rhnchannel
                      INNER JOIN rhnchannelpackage ON rhnchannel.id = rhnchannelpackage.channel_id
                      INNER JOIN rhnpackage ON rhnpackage.id = rhnchannelpackage.package_id
        ORDER BY channel_id, package_id OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="ChannelErrata" class="">
    <query params="offset, limit">
          SELECT rhnchannel.id AS channel_id
                    , rhnerrata.id AS errata_id
                    , rhnchannel.label AS channel_label
                    , rhnerrata.advisory_name
            FROM rhnchannelerrata
                    INNER JOIN rhnchannel ON rhnchannelerrata.channel_id = rhnchannel.id
                    INNER JOIN rhnerrata ON rhnchannelerrata.errata_id = rhnerrata.id
        ORDER BY channel_id, errata_id OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="ChannelRepository" class="">
    <query params="offset, limit">
          SELECT rhnchannelcontentsource.channel_id
                    , rhnchannelcontentsource.source_id AS repository_id
                    , rhncontentsource.label AS repository_label
            FROM rhnchannelcontentsource
                    INNER JOIN rhncontentsource ON rhnchannelcontentsource.source_id = rhncontentsource.id
                    INNER JOIN rhncontentsourcetype ON rhncontentsource.type_id = rhncontentsourcetype.id
        ORDER BY channel_id, repository_id OFFSET :offset LIMIT :limit
    </query>
</mode>

<mode name="Errata" class="">
    <query params="offset, limit">
          SELECT rhnerrata.id AS errata_id
                      , rhnerrata.advisory_name
                      , rhnerrata.advisory_type
                      , rhnerrata.advisory_status
                      , rhnerrata.issue_date
                      , rhnerrata.update_date
                      , CASE
                          WHEN rhnerrataseverity.rank = 0 then 'Critical'
                          WHEN rhnerrataseverity.rank = 1 then 'Important'
                          WHEN rhnerrataseverity.rank = 2 then 'Moderate'
                          WHEN rhnerrataseverity.rank = 3 then 'Low'
                          ELSE NULL
                        END AS severity
                      , rb.keyword IS NOT NULL AS reboot_required
                      , rs.keyword IS NOT NULL AS affects_package_manager
                      , ( SELECT string_agg(rhncve.name, '; ')
                           FROM rhnerratacve
                                    INNER JOIN rhncve ON rhnerratacve.cve_id = rhncve.id
                          WHERE rhnerratacve.errata_id = rhnerrata.id
                        ) AS cve
                      , rhnerrata.synopsis
                      , web_customer.name AS organization
            FROM rhnerrata
                      LEFT JOIN rhnerrataseverity ON rhnerrata.severity_id = rhnerrataseverity.id
                      LEFT JOIN rhnerratakeyword rb ON rhnerrata.id = rb.errata_id AND rb.keyword = 'reboot_suggested'
                      LEFT JOIN rhnerratakeyword rs ON rhnerrata.id = rs.errata_id AND rs.keyword = 'restart_suggested'
                      LEFT JOIN web_customer ON rhnerrata.org_id = web_customer.id
        ORDER BY errata_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="Package" class="">
    <query params="offset, limit">
          SELECT rhnpackage.id AS package_id
                      , rhnpackagename.name
                      , rhnpackageevr.epoch
                      , rhnpackageevr.version
                      , rhnpackageevr.release
                      , rhnpackageevr.type
                      , rhnpackagearch.label AS arch
                      , rhnpackage.package_size
                      , rhnpackage.payload_size
                      , rhnpackage.installed_size
                      , rhnpackage.vendor
                      , web_customer.name AS organization 
            FROM rhnpackage
                      LEFT JOIN rhnpackagename ON rhnpackage.name_id = rhnpackagename.id
                      LEFT JOIN rhnpackageevr ON rhnpackage.evr_id = rhnpackageevr.id
                      LEFT JOIN rhnpackagearch ON rhnpackage.package_arch_id = rhnpackagearch.id
                      LEFT JOIN web_customer ON rhnpackage.org_id = web_customer.id
        ORDER BY package_id OFFSET :offset LIMIT :limit
  </query>
</mode>

<mode name="Repository" class="">
    <query params="offset, limit">
          SELECT rhncontentsource.id AS repository_id
                    , rhncontentsource.label
                    , rhncontentsource.source_url AS url
                    , rhncontentsourcetype.label AS type
                    , rhncontentsource.metadata_signed = 'Y' AS metadata_signed
                    , web_customer.name AS organization
            FROM rhncontentsource
                    INNER JOIN rhncontentsourcetype ON rhncontentsource.type_id = rhncontentsourcetype.id
                    LEFT JOIN web_customer ON rhncontentsource.org_id = web_customer.id
        ORDER BY repository_id OFFSET :offset LIMIT :limit
    </query>
</mode>

</datasource_modes>
