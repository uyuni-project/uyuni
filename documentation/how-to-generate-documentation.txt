Generated documentation is available to users at this url:

https://spacewalkproject.github.io/documentation.html

It used to be available here, but no longer - http://spacewalk.redhat.com/documentation/

The documentation available here used to be stored in SVN, not our
spacewalk.github repo, and auto-pulled into whatever serves content
at the above url.  The SVN repo was this one:
svn checkout svn+ssh://svn.rhndev.redhat.com/svn/rhn-svn/branches/spacewalk_web/LIVE/documentation

As of Spacewalk 2.7, the documentation is now stored in a separate
git repo and pulled into whatever servers content at the documentation
url.  This github repo is:
git clone git@github.com:spacewalkproject/spacewalkproject.github.io.git


To generate the docs, one needs to:

Setup
=====
    * Have available a SW-nightly/OracleXE machine, we'll call it 'SW-ORA'.  This
      is only needed for the generation of the schema docs.  I have tested the
      schema generation on rhel6, rhel7 and fedora26.  All appear to work correctly.
      The current schema docs were generated on rhel6.
    * Checkout docs from the spacewalkproject.github.io.git repo
    * export DOCS_GIT=<wherever you spacewalkproject.github.io.git checkout is>
    * export SW_GIT=<wherever your spacewalk.github checkout is>
    * export VERS=2.7 # SW-version you're generating docs for
    * export PREV_VERS=2.6 # SW-version prior to $VERS
    * yum install epydoc graphviz # for python
    * javadoc needs to be installed, it needs java-1.x.0-openjdk-devel # for java
          NOTE: the original instructions said it needed java-1.6.0, but I used
	        the default 1.8.0 already installed on my RHEL 6 system.

Javadoc
=======
    # Build
    cd $SW_GIT/documentation;
    # Check the Makefile to make sure the JAVA_DOC_SRC_VERSION is set
    # to the version of java we're currently using.  Update if not.
    # Then run `make java`.
    make java
    # If there are any errors during the javadoc generation, fix
    # the errors.  The master branch was cleaned up on 2017-11-14,
    # following the 2.7 release, such that no errors were reported.
    # Fix any errors, then `make java` again, and repeat until
    # there are no errors.  Most fixes required surround things
    # that look like html with {@literal ...}.  Other errors are
    # fixed by replacing <br/> with <br>, <p/> with <p>.
    # Formatted code snippets should be done like this:
    # <pre>{@literal
    #   ... formatted code, multiple lines ...
    # }</pre>
    # Have a look at commit 1299868891ddfaaf8fe5a255484fd9bf4cdcb6b1
    # to see how numerous types of issues/errors were addressed.
    #
    # Move to DOCS_GIT repo
    rm -rf $DOCS_GIT/documentation/javadoc; cp -r $SW_GIT/documentation/javadoc $DOCS_GIT/documentation
    # Check your work
    cd $DOCS_GIT; git status
    # if sane file list, like a few additions, few deletions, and several modifications,
    # check the content
    git diff
    # if all looks good, commit it.
    git add --all; git commit -m "Updating java documentation for $VERS"


Python
======
    # Note: in last version of epydoc (epydoc-3.0.1-15) is missing fix introduced in upstream r1728,
    # if it's not applied next step will probably end up with exception where epydoc run
    # fails to run to completion.  Mine stopped around 66% completion.
    # NOTE: I ended up running an old version found on rpmfind - 3.0.1-14 and then I applied the
    #   patch attached to bug 364 manually (https://sourceforge.net/p/epydoc/bugs/364/)
    # NOTE: There were lots of ImportErrors reported, but this should be ok - each says the source
    # was still processed - just make sure it runs to 100% completion
    # NOTE: I was not able to run this on F26 with the latest epydoc package - epydoc-3.0.1.20090203svn-5.fc26.src.rpm, even after manually updating dotgraph.py with the patch mentioned above.  I suspect, but have been unable to prove there is something in our py files or setup where we run epydoc that is causing this issue.
    # Build
    cd $SW_GIT/documentation; make python
    # Move to DOCS_GIT repo
    rm -rf $DOCS_GIT/documentation/python-doc; cp -r $SW_GIT/documentation/python-doc $DOCS_GIT/documentation
    # Check your work
    cd $DOCS_GIT; git status
    # if sane file list, like a few additions, few deletions, and several modifications,
    # check the content
    git diff
    # if all looks good, commit it.
    git add --all; git commit -m "Updating python documentation for $VERS"


API docs
========
  * The following, unless you're already on a dev-workstation setup:
    # remove apache-ivy :-(
    # install ivy from http://mirrors.dotsrc.org/jpackage/5.0/generic/free/
    # install ant and ant-junit
    # NOTE: (2017-08-30) I did this on a rhel6 system and did use apache-ivy.
    #       I also followed the first few steps of setting up a full spacewalk
    #       dev system.  Finally, I had to copy xalan-j2.jar from build/run-lib
    #       to build/build-lib, to get everything to work.
  * Then:
    # Build
    cd $SW_GIT/java; ant apidoc-html
    # Move to DOCS_GIT repo
    rm -rf $DOCS_GIT/documentation/api/$VERS; cp -r $SW_GIT/java/build/reports/apidocs/html $DOCS_GIT/documentation/api/$VERS
    # Check your work
    cd $DOCS_GIT; git status
    # if sane file list, like a few additions, few deletions, and several modifications,
    # check the content
    git diff
    # if all looks good, commit it.
    git add --all; git commit -m "Updating API documentation for $VERS"


schema-docs
===========
  Log into SW-ORA and :
  ----------------------
    # Get required tools
    yum install -y wget graphviz graphviz-gd git
    # Setup source from git
    git clone https://github.com/spacewalkproject/spacewalk.git
    cd spacewalk/documentation
    git checkout SPACEWALK-$VERS
    # Get schema-vsiualization tools - 0.31 is the latest version as of
    # 2017-10-19.
    wget http://sourceforge.net/projects/oraschemadoc/files/oraschemadoc/0.31/oraschemadoc-0.31.tar.gz/download -O oraschemadoc-0.31.tar.gz
    tar xvzf oraschemadoc-0.31.tar.gz
    chmod a+x oraschemadoc-0.31/oraschemadoc.py
    # Run the schema-visualization tool
    # NOTE: user/pass/db from /etc/rhn/rhn.conf db_user, db_password, db_name
    ORASCHEMADOC=oraschemadoc-0.31/oraschemadoc.py DSN=user/pass@db make schema
    # Send the results home
    scp -r db-schema <YOU>@<MACHINE-WITH-YOUR-DOCS_GIT-CHECKOUT>:/tmp

  Back to <MACHINE-WITH-YOUR-DOCS_GIT-CHECKOUT>:
  ---------------------------------------------
    # Move to DOCS_GIT repo
    rm -rf $DOCS_GIT/documentation/schema-doc; cp -r /tmp/db-schema $DOCS_GIT/documentation/schema-doc
    # Check your work
    cd $DOCS_GIT; git status
    # if sane file list, like a few additions, few deletions, and several modifications,
    # check the content
    git diff
    # if all looks good, commit it.
    git add --all; git commit -m "Updating Schema documentation for $VERS"


push all commits
================
    cd $DOC_GIT; git push
