This document outlines some of the big changes occuring for Spacewalk Proxy 3.*
-------------------------------------------------------------------------

Changes in the Spacewalk Proxy architexture required dramatic changes in the
config files. Most everything was simplified.

Simplified the SSL config variable
    o use_ssl (NEW)

We made some firm rules:
    o all components reside on the same box.
    o the broker:
      - GET requests:
            . are non-SSLed (potentially SSLed by the redirect)
            . use the local cache
            . CFG.HTTP_PROXY or CFG.USE_SSL:
                . use the SSL Redirect
            . not CFG.USE_SSL and not CFG.HTTP_PROXY:
                . bypass the SSL Redirect (performance)
      - POST (!GET) requests bypass both the local cache and SSL redirect
    o the redirect operates SSL/non-SSL

Because of the rule changes, there is only 1 setting for each of the
connection variables:
    o rhn_parent
    o http_proxy*
    o ca_chain

Since all component are on a single box, squid is a new setting with
127.0.0.1:8000 as the value:
    o squid (NEW)


So, here's the breakdown of changes to these files:
[/etc/rhn/defaults]
rhn_proxy.conf:
    rhn_parent = xmlrpc.rhn.redhat.com  - moved into here (exposed)
                                          (note no scheme/path)
    http_proxy* - moved into here (exposed)
    ca_chain = /usr/share/rhn/RHNS-CA-CERT - moved into here (exposed)
    use_ssl = 1                            - new setting (exposed)
    squid = 127.0.0.1:8080                 - new setting (unexposed)

rhn_proxy_broker.conf:
    auth_cache_server   - format is server:port now (just like an HTTP proxy)
                        - moved into (unexposed)
    auth_cache_server_port  - gone
    rhn_parent              - gone
    http_proxy*             - gone
    ca_chain                - gone

rhn_proxy_redirect.conf:
    rhn_parent          - gone
    http_proxy*         - gone
    ca_chain*           - gone



[/etc/httpd/conf]
http.conf:
    o support for _rhn_proxy/index.html (landing page added) with a
      DirectoryIndex change.

rhn_proxy.conf:
    o gains <LocationMatch "/*"> ... </LocationMatch> where ... is the contents
      of what now is in /etc/httpd/conf/rhn/proxy_broker.conf
    o gains <Location /pub> ... </Location> which sets behavior back to the
      default for this.
    o gains <Location /pub> ... </Location> which sets behavior back to the
      default for this.
    o gains <Location /index.html> ... </Location> which sets behavior back to the
      default for this.
    o gains <Location /_rhn_proxy> ... </Location> which sets behavior back to the
      default for this: gives a tree structure to use.
    o removes any referal to RHNComponentType (now it is generic)
    o remove the Include at the end

rhn/*:
    o gone, in fact the directory should go away.




NOTE -- all the places that make an XMLRPC request:
    - broker/rhnRepository.__channelPackageMapping()   forced /XMLRPC
    - broker/rhnRepository.getSourcePackagePath()
    - broker/rhnProxyAuth.__get_server()  (the login sequence) forced /XMLRPC
    - rhnShared._connectToParent()
        - via HTTPConnection()
        - rhnBroker and rhnRedirect use this


Authentication changes:
    - tokens are now "stacked" so that we can discern routing information from
      them:
        x-rhn-proxy-auth:
            SID = server ID
            U = username
            ST = server time
            EO = expiration offset
            SIG = signature
            H = hostname
        
        "SID1:U1:ST1:EO1:SIG1:H1,SID2:U2:ST2:EO2:SIG2:H2,SID3:U3:ST3:EO3:SIG3:H3"
        |__________1___________| |__________2__________| |__________3__________|

        Used to be just one token with this format:
            "SID1:U1:ST1:EO1:SIG1" Note the lack of hostname information.



