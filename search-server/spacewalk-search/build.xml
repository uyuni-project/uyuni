<project name="search-server" basedir="." default="all">
    <import file="buildconf/build-utils.xml" />
    <import file="buildconf/build-props.xml" />

    <property file="build.properties" />

    <path id="project.classpath">
        <fileset dir="${java.lib.dir}" includes="**/*.jar" />
    </path>

    <path id="test.classpath">
        <pathelement location="${build.dir}" />
        <path refid="project.classpath" />
        <pathelement location="${basedir}/src/config" />
    </path>

    <target name="init-ivy" unless="installbuild">
        <mkdir dir="${java.lib.dir}" />
        <jpackage-deps jars="ivy" dir="${java.lib.dir}" />
        <taskdef name="ivy-retrieve"
             classname="org.apache.ivy.ant.IvyRetrieve"/>
    </target>

    <target name="make-eclipse-project" depends="resolve-ivy"
            description="Generate eclipse project files">
      <copy file="buildconf/eclipse.project" tofile=".project" />
      <exec executable="../../scripts/gen-eclipse.py" output=".classpath" >
        <arg value="src/java:src/config"/>
        <arg value="
          ${java.lib.dir}:
          ${env.JAVA_HOME}/lib/tools.jar:
          ${env.JAVA_HOME}/lib/ant.jar:
          ${env.JAVA_HOME}/lib/ant-junit.jar
        "/>
      </exec>
    </target>

    <target name="check-testcase-name" if="testcase" depends="">
        <propertyregex property="valid.testcase"
            input="${testcase}"
            regexp="(.*)Test$"
            select="\1"
            casesensitive="true" />
    </target>

    <target name="check-testcase" depends="check-testcase-name" if="testcase"
        unless="valid.testcase">
        <fail message="Invalid testcase name: ${testcase}.  Class name must look like .*Test"/>
    </target>

    <target name="test" depends="compile, check-testcase"
        description="Run the tests (use -Dtestcase=&lt;testcase&gt;)">
        <mkdir dir="${report.dir}" />
        <!-- set testcase to wildcard "*" to test everything, unless
        a specific testcase name was supplied. -->
        <if>
            <not>
                <isset property="${testcase}" />
            </not>
            <then>
                <property name="testcase" value="*Test"/>
            </then>
        </if>
        <junit>
            <sysproperty key="rhn.config.dir" value="/etc/rhn" />
            <sysproperty key="search.config.dir" value="src/config/search" />
            <sysproperty key="log4j.configuration" value="log4j.test.properties" />
            <classpath refid="test.classpath" />
            <formatter type="brief" usefile="false" />
            <formatter type="xml" />
            <batchtest fork="yes" todir="${report.dir}">
                <fileset dir="${build.dir}" includes="**/${testcase}.class" />
            </batchtest>
        </junit>
    </target>

    <target name="resolve-local" description="resolve jars via jpackage" if="installbuild">
        <jpackage-deps jars="${jpackage.jars}" dir="${java.lib.dir}" />
    </target>

    <target name="resolve-ivy" description="retrieve dependencies with ivy"
              depends="init-ivy" unless="installbuild">
        <!-- properties set here to show we are overriding default ivy values -->
        <property name="ivy.default.ivy.user.dir" value="${user.home}/.ivy/search-server"/>
        <property name="ivy.local.default.artifact.pattern" value="[artifact]-[revision].[ext]" />
        <property name="ivy.ivyrep.default.ivy.root" value="${ivyserver}/ivy/" />
        <property name="ivy.ivyrep.default.artifact.root" value="${ivyserver}/ivy/" />
        <property name="ivy.ivyrep.default.artifact.pattern" value="[artifact]-[revision].[ext]" />
        <ivy-retrieve/>
    </target>

    <target name="resolve" depends="resolve-ivy,resolve-local" />

    <target name="prep">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
        <mkdir dir="${java.lib.dir}" />
    </target>

    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${build.instrument.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${java.lib.dir}" />
        <delete dir="${report.dir}" />
        <delete file="coverage.ec" />
        <delete file="rhn_search_daemon.log" />
    </target>

    <target name="compile" depends="prep, resolve">
        <javac srcdir="${java.src.dir}"
               classpathref="project.classpath"
               destdir="${build.dir}"
               deprecation="on"
               excludesfile="buildconf/exclude"
               debug="on">
            <compilerarg value="-Xlint:unchecked" />
        </javac>
        <copy todir="${build.dir}/com/redhat/satellite/search/db">
            <fileset dir="${config.src.dir}/com/redhat/satellite/search/db/">
                <include name="*.xml" />
            </fileset>
        </copy>
        <copy file="${config.src.dir}/log4j.properties" todir="${build.dir}" />
        <copy file="${config.src.dir}/quartz.properties" todir="${build.dir}" />
    </target>

    <target name="package" depends="compile">
        <jar basedir="${build.dir}"
             destfile="${dist.dir}/${jar.file.name}"
             excludes="**/tests/**"
             includes="**/**" />
    </target>

    <target name="create-local-repo" description="Create a local Ivy repo">
        <mkdir dir="${user.home}/.ivy/search-server/local/" />
    </target>

    <target name="clean-cache" description="Removes the Ivy jar cache">
        <delete dir="${lib.dir}" quiet="true" />
        <delete dir="${user.home}/.ivy/search-server/cache/" quiet="true" />
    </target>

    <target name="all" depends="package" />

    <target name="init-install">
        <property name="installbuild" value="true"/>
    </target>

    <target name="install" depends="init-install,package" />

</project>
