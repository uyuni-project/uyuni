apiVersion: batch/v1
kind: Job
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/part-of: uyuni
  name: uyuni-setup-{{ now | date "20060102150405" }}
  namespace: "{{ .Release.Namespace }}"
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: uyuni
    spec:
      containers:
        - command:
          - sh
          - -c
          - |2
            if test -e /root/.MANAGER_SETUP_COMPLETE; then
              echo "Server appears to be already configured. Installation options may be ignored."
              exit 0
            fi
            echo 'JAVA_OPTS=" $JAVA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=*:8003,server=y,suspend=n" ' >> /etc/tomcat/conf.d/remote_debug.conf
            echo 'JAVA_OPTS=" $JAVA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=*:8001,server=y,suspend=n" ' >> /etc/rhn/taskomatic.conf
            echo 'JAVA_OPTS=" $JAVA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=*:8002,server=y,suspend=n" ' >> /usr/share/rhn/config-defaults/rhn_search_daemon.conf

            /usr/lib/susemanager/bin/mgr-setup
            RESULT=$?

            if test -n "$ADMIN_PASS"; then
                echo "starting tomcat..."
              (su -s /usr/bin/sh -g tomcat -G www -G susemanager tomcat /usr/lib/tomcat/server start)&

              echo "starting apache2..."
              /usr/sbin/start_apache2 -k start

              echo "Creating first user..."
              CURL_SCHEME="http"
              curl -o /tmp/curl-retry -s --retry 7 $CURL_SCHEME://localhost/rhn/newlogin/CreateFirstUser.do

              HTTP_CODE=$(curl -o /dev/null -s -w %{http_code} $CURL_SCHEME://localhost/rhn/newlogin/CreateFirstUser.do)
              if test "$HTTP_CODE" == "200"; then
                echo "Creating administration user"
                curl -s -o /tmp/curl_out \
                  -d "orgName=SUSE Test" \
                  -d "adminLogin=$ADMIN_USER" \
                  -d "adminPassword=$ADMIN_PASS" \
                  -d "firstName=Admin" \
                  -d "lastName=Admin" \
                  -d "email=galaxy-noise@suse.de" \
                  $CURL_SCHEME://localhost/rhn/manager/api/org/createFirst
                if ! grep -q '^{"success":true' /tmp/curl_out ; then
                  echo "Failed to create the administration user"
                  cat /tmp/curl_out
                fi
                rm -f /tmp/curl_out
              elif test "$HTTP_CODE" == "403"; then
                echo "Administration user already exists, reusing"
              else
                RESULT=1
              fi
            fi

            exit $RESULT
          env:
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: admin-credentials
                  optional: false
            - name: ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: admin-credentials
                  optional: false
            - name: MANAGER_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: db-credentials
                  optional: false
            - name: MANAGER_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: db-credentials
                  optional: false
            - name: REPORT_DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: reportdb-credentials
                  optional: false
            - name: REPORT_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: reportdb-credentials
                  optional: false
            - name: REPORT_DB_CA_CERT
              value: /etc/pki/trust/anchors/DB-RHN-ORG-TRUSTED-SSL-CERT
            - name: MANAGER_DB_NAME
              value: susemanager
            - name: MANAGER_DB_HOST
              value: db
            - name: MANAGER_DB_PORT
              value: "5432"
            - name: REPORT_DB_PORT
              value: "5432"
            - name: EXTERNALDB_PROVIDER
            - name: ISS_PARENT
            - name: NO_SSL
              value: "Y"
            - name: MANAGER_ENABLE_TFTP
              value: "Y"
            - name: REPORT_DB_NAME
              value: reportdb
            - name: REPORT_DB_HOST
              value: reportdb
            - name: MANAGER_ADMIN_EMAIL
              valueFrom:
                configMapKeyRef:
                  key: email
                  name: uyuni-config
                  optional: false
            - name: MANAGER_MAIL_FROM
              valueFrom:
                configMapKeyRef:
                  key: email
                  name: uyuni-config
                  optional: false
            - name: UYUNI_FQDN
              valueFrom:
                configMapKeyRef:
                  key: fqdn
                  name: uyuni-config
                  optional: false
{{- if .Values.registrySecret }}
            - name: SCC_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.registrySecret }}
                  optional: false
            - name: SCC_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.registrySecret }}
                  optional: false
{{- end }}
          image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: setup
          volumeMounts:
            - mountPath: /var/lib/cobbler
              name: var-cobbler
            - mountPath: /var/lib/rhn/search
              name: var-search
            - mountPath: /var/lib/salt
              name: var-salt
            - mountPath: /var/cache
              name: var-cache
            - mountPath: /var/spacewalk
              name: var-spacewalk
            - mountPath: /var/log
              name: var-log
            - mountPath: /srv/salt
              name: srv-salt
            - mountPath: /srv/www/
              name: srv-www
            - mountPath: /srv/tftpboot
              name: srv-tftpboot
            - mountPath: /srv/formula_metadata
              name: srv-formulametadata
            - mountPath: /srv/pillar
              name: srv-pillar
            - mountPath: /srv/susemanager
              name: srv-susemanager
            - mountPath: /srv/spacewalk
              name: srv-spacewalk
            - mountPath: /root
              name: root
            - mountPath: /etc/pki/trust/anchors/
              name: ca-certs
            - mountPath: /run/salt/master
              name: run-salt-master
            - mountPath: /etc/apache2
              name: etc-apache2
            - mountPath: /etc/systemd/system/multi-user.target.wants
              name: etc-systemd-multi
            - mountPath: /etc/systemd/system/sockets.target.wants
              name: etc-systemd-sockets
            - mountPath: /etc/salt
              name: etc-salt
            - mountPath: /etc/tomcat
              name: etc-tomcat
            - mountPath: /etc/cobbler
              name: etc-cobbler
            - mountPath: /etc/sysconfig
              name: etc-sysconfig
            - mountPath: /etc/postfix
              name: etc-postfix
            - mountPath: /etc/sssd
              name: etc-sssd
            - mountPath: /etc/rhn
              name: etc-rhn
            - mountPath: /etc/pki/trust/anchors/LOCAL-RHN-ORG-TRUSTED-SSL-CERT
              name: ca-cert
              readOnly: true
              subPath: ca.crt
            - mountPath: /usr/share/susemanager/salt/certs/RHN-ORG-TRUSTED-SSL-CERT
              name: ca-cert
              readOnly: true
              subPath: ca.crt
            - mountPath: /srv/www/htdocs/pub/RHN-ORG-TRUSTED-SSL-CERT
              name: ca-cert
              readOnly: true
              subPath: ca.crt
            - mountPath: /etc/pki/trust/anchors/DB-RHN-ORG-TRUSTED-SSL-CERT
              name: db-ca-cert
              readOnly: true
              subPath: ca.crt
            - mountPath: /etc/pki/
              name: tls
{{- if .Values.registrySecret }}
      imagePullSecrets:
        - name: {{ .Values.registrySecret }}
{{- end }}
      initContainers:
        - command:
            - sh
            - -x
            - -c
            - |2
              # Fill he empty volumes
              for vol in /var/lib/cobbler \
                     /var/lib/salt \
                     /var/lib/pgsql \
                     /var/cache \
                     /var/log \
                     /srv/salt \
                     /srv/www \
                     /srv/tftpboot \
                     /srv/formula_metadata \
                     /srv/pillar \
                     /srv/susemanager \
                     /srv/spacewalk \
                     /root \
                     /etc/apache2 \
                     /etc/rhn \
                     /etc/systemd/system/multi-user.target.wants \
                     /etc/systemd/system/sockets.target.wants \
                     /etc/salt \
                     /etc/tomcat \
                     /etc/cobbler \
                     /etc/sysconfig \
                     /etc/postfix \
                     /etc/sssd
              do
                chown --reference=$vol /mnt$vol;
                chmod --reference=$vol /mnt$vol;
                if [ -z "$(ls -A /mnt$vol)" ]; then
                    cp -a $vol/. /mnt$vol;
                fi
              done
          image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: init-volumes
          volumeMounts:
            - mountPath: /mnt/var/lib/cobbler
              name: var-cobbler
            - mountPath: /mnt/var/lib/rhn/search
              name: var-search
            - mountPath: /mnt/var/lib/salt
              name: var-salt
            - mountPath: /mnt/var/cache
              name: var-cache
            - mountPath: /mnt/var/spacewalk
              name: var-spacewalk
            - mountPath: /mnt/var/log
              name: var-log
            - mountPath: /mnt/srv/salt
              name: srv-salt
            - mountPath: /mnt/srv/www/
              name: srv-www
            - mountPath: /mnt/srv/tftpboot
              name: srv-tftpboot
            - mountPath: /mnt/srv/formula_metadata
              name: srv-formulametadata
            - mountPath: /mnt/srv/pillar
              name: srv-pillar
            - mountPath: /mnt/srv/susemanager
              name: srv-susemanager
            - mountPath: /mnt/srv/spacewalk
              name: srv-spacewalk
            - mountPath: /mnt/root
              name: root
            - mountPath: /mnt/etc/pki/trust/anchors/
              name: ca-certs
            - mountPath: /mnt/run/salt/master
              name: run-salt-master
            - mountPath: /mnt/etc/apache2
              name: etc-apache2
            - mountPath: /mnt/etc/systemd/system/multi-user.target.wants
              name: etc-systemd-multi
            - mountPath: /mnt/etc/systemd/system/sockets.target.wants
              name: etc-systemd-sockets
            - mountPath: /mnt/etc/salt
              name: etc-salt
            - mountPath: /mnt/etc/tomcat
              name: etc-tomcat
            - mountPath: /mnt/etc/cobbler
              name: etc-cobbler
            - mountPath: /mnt/etc/sysconfig
              name: etc-sysconfig
            - mountPath: /mnt/etc/postfix
              name: etc-postfix
            - mountPath: /mnt/etc/sssd
              name: etc-sssd
            - mountPath: /mnt/etc/rhn
              name: etc-rhn
        - command:
            - sh
            - -c
            - |2
              until pg_isready -U $MANAGER_USER -h $MANAGER_DB_HOST -p $MANAGER_DB_PORT -d $MANAGER_DB_NAME; do
                sleep 60
              done

              until pg_isready -U $REPORT_DB_USER -h $REPORT_DB_HOST -p $REPORT_DB_PORT -d $REPORT_DB_NAME; do
                sleep 60
              done
          env:
            - name: MANAGER_DB_HOST
              value: db
            - name: MANAGER_DB_PORT
              value: "5432"
            - name: MANAGER_DB_NAME
              value: susemanager
            - name: MANAGER_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: db-credentials
                  optional: false
            - name: REPORT_DB_HOST
              value: reportdb
            - name: REPORT_DB_PORT
              value: "5432"
            - name: REPORT_DB_NAME
              value: reportdb
            - name: REPORT_DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: reportdb-credentials
                  optional: false
          image: {{- include "deployment.container.image" (dict "name" "server" "global" .) | indent 1}}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: db-waiter
      restartPolicy: Never
      volumes:
        - name: var-cobbler
          persistentVolumeClaim:
            claimName: var-cobbler
        - name: var-search
          persistentVolumeClaim:
            claimName: var-search
        - name: var-salt
          persistentVolumeClaim:
            claimName: var-salt
        - name: var-cache
          persistentVolumeClaim:
            claimName: var-cache
        - name: var-spacewalk
          persistentVolumeClaim:
            claimName: var-spacewalk
        - name: var-log
          persistentVolumeClaim:
            claimName: var-log
        - name: srv-salt
          persistentVolumeClaim:
            claimName: srv-salt
        - name: srv-www
          persistentVolumeClaim:
            claimName: srv-www
        - name: srv-tftpboot
          persistentVolumeClaim:
            claimName: srv-tftpboot
        - name: srv-formulametadata
          persistentVolumeClaim:
            claimName: srv-formulametadata
        - name: srv-pillar
          persistentVolumeClaim:
            claimName: srv-pillar
        - name: srv-susemanager
          persistentVolumeClaim:
            claimName: srv-susemanager
        - name: srv-spacewalk
          persistentVolumeClaim:
            claimName: srv-spacewalk
        - name: root
          persistentVolumeClaim:
            claimName: root
        - name: ca-certs
          persistentVolumeClaim:
            claimName: ca-certs
        - name: run-salt-master
          persistentVolumeClaim:
            claimName: run-salt-master
        - name: etc-apache2
          persistentVolumeClaim:
            claimName: etc-apache2
        - name: etc-systemd-multi
          persistentVolumeClaim:
            claimName: etc-systemd-multi
        - name: etc-systemd-sockets
          persistentVolumeClaim:
            claimName: etc-systemd-sockets
        - name: etc-salt
          persistentVolumeClaim:
            claimName: etc-salt
        - name: etc-tomcat
          persistentVolumeClaim:
            claimName: etc-tomcat
        - name: etc-cobbler
          persistentVolumeClaim:
            claimName: etc-cobbler
        - name: etc-sysconfig
          persistentVolumeClaim:
            claimName: etc-sysconfig
        - name: etc-postfix
          persistentVolumeClaim:
            claimName: etc-postfix
        - name: etc-sssd
          persistentVolumeClaim:
            claimName: etc-sssd
        - name: etc-rhn
          persistentVolumeClaim:
            claimName: etc-rhn
        - configMap:
            name: uyuni-ca
          name: ca-cert
        - configMap:
            name: db-ca
          name: db-ca-cert
        - name: tls
          secret:
            items:
              - key: tls.crt
                path: tls/certs/spacewalk.crt
              - key: tls.key
                mode: 256
                path: tls/private/spacewalk.key
            secretName: uyuni-cert
        - configMap:
            name: db-ca
          name: db-ca
