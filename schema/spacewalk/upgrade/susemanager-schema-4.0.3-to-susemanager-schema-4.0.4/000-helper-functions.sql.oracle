CREATE OR REPLACE PROCEDURE create_table_if_not_exists(
  p_table_name VARCHAR2,
  create_table_query VARCHAR2
) IS
  n NUMBER;
BEGIN
  SELECT COUNT(*) INTO n FROM user_tables WHERE table_name = UPPER(p_table_name);
  IF (n = 0) THEN
    EXECUTE IMMEDIATE create_table_query;
  END IF;
END;
/
show errors

CREATE OR REPLACE PROCEDURE create_seq_if_not_exists(
  isSeqName VARCHAR2,
  isSeqOptions VARCHAR2
) IS
  lnSeqCount NUMBER;
BEGIN
  -- try to find sequence in data dictionary
  SELECT count(1)
    INTO lnSeqCount
    FROM user_sequences
    WHERE UPPER(sequence_name) = UPPER(isSeqName);
  -- if sequence not found, create it
  IF lnSeqCount = 0 THEN
    EXECUTE IMMEDIATE 'CREATE SEQUENCE ' || UPPER(isSeqName) || ' ' || isSeqOptions;
  END IF;
END;
/
show errors

CREATE OR REPLACE PROCEDURE add_column_if_not_exists(
  alter_table_query VARCHAR2
) IS
    column_exists exception;
    pragma exception_init (column_exists , -01430);
begin
  begin
    execute immediate alter_table_query;
  exception
    when column_exists then null;
  end;
end;
/
show errors

create or replace procedure drop_if_exists(type_in varchar2, name_in varchar2)
is
  cnt number := 0;
begin
  select count(*) into cnt from user_objects where object_type = upper(type_in) and object_name = upper(name_in);
  if cnt > 0 then
    if upper(type_in) = 'TABLE' then
      execute immediate 'drop ' || type_in || ' ' || name_in || ' purge';
    else
      execute immediate 'drop ' || type_in || ' ' || name_in;
    end if;
  end if;
end;
/
show errors


create or replace procedure drop_constraint_if_exists(p_table_name varchar2, p_constraint_name varchar2)
is
  l_cnt integer;
BEGIN
    SELECT COUNT(*)
      INTO l_cnt
      FROM user_constraints
     WHERE constraint_name = UPPER(p_constraint_name);

    IF( l_cnt = 1 )
    THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' DROP CONSTRAINT ' || p_constraint_name;
    END IF;
END;
/
show errors


CREATE OR REPLACE PROCEDURE drop_column_if_exists(
  p_table_name VARCHAR2,
  p_column_name VARCHAR2
) IS
  l_cnt integer;
BEGIN
  SELECT COUNT(*)
    INTO l_cnt 
    FROM user_tab_columns
   WHERE table_name = UPPER(p_table_name)
     and column_name = UPPER(p_column_name);

  IF( l_cnt = 1 )
  THEN
    EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' DROP COLUMN ' || p_column_name;
  END IF;
END;
/
show errors

