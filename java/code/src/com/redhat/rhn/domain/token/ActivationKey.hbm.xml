<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.redhat.rhn.domain.token.ActivationKey"
        table="rhnActivationKey">
        <id name="key" type="string" column="token"/>
        
        <property name="bootstrap" column="bootstrap" not-null="true" type="string" length="1" />
        <property name="created" column="created" type="timestamp" insert="false"
            update="false"/>
        <property name="modified" column="modified" type="timestamp" insert="false"
            update="false"/>

        <many-to-one name="token" class="com.redhat.rhn.domain.token.Token"
            column="reg_token_id" cascade="all"/>

        <many-to-one name="kickstartSession"
            class="com.redhat.rhn.domain.kickstart.KickstartSession"
            column="ks_session_id"/>

    </class>

    <query name="ActivationKey.findByKey">
        <![CDATA[from com.redhat.rhn.domain.token.ActivationKey as ak where ak.key = :key]]>
    </query>

    <query name="ActivationKey.findByToken">
        <![CDATA[from com.redhat.rhn.domain.token.ActivationKey as ak where ak.token = :token and
               kickstartSession is null]]>
    </query>

    <query name="ActivationKey.findByServer">
        <![CDATA[select actKey
                   from com.redhat.rhn.domain.token.ActivationKey actKey,
                        com.redhat.rhn.domain.token.Token token
                  where actKey.token = token
                    and actKey.bootstrap = 'N'
                    and token.server = :server]]>
    </query>

    <query name="ActivationKey.findByActivatedServer">
        <![CDATA[select actKey
                   from com.redhat.rhn.domain.token.ActivationKey actKey,
                        com.redhat.rhn.domain.token.Token token
                  where actKey.token = token
                    and actKey.bootstrap = 'N'
                    and :server in elements(token.activatedServers)]]>
    </query>

    <query name="ActivationKey.findBySession">
        <![CDATA[from com.redhat.rhn.domain.token.ActivationKey as ak where ak.kickstartSession = :session]]>
    </query>

    <query name="ActivationKey.findByOrg">
        <![CDATA[from com.redhat.rhn.domain.token.ActivationKey as ak
                   where ak.token.org = :org
                     and ak.kickstartSession = null
                     and ak.token.server = null
                     and ak.bootstrap = 'N']]>
    </query>

    <query name="ActivationKey.findActiveByOrg">
        <![CDATA[from com.redhat.rhn.domain.token.ActivationKey as ak
                   where ak.token.org = :org
                     and ak.kickstartSession = null
                     and ak.token.server = null
                     and ak.bootstrap = 'N'
                     and ak.token.disabled = 0]]>
    </query>

     <query name="ActivationKey.listAssociatedKickstarts">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as k where :token member of k.defaultRegTokens]]>
    </query>

    <query name="ActivationKey.findBootstrap">
        <![CDATA[from com.redhat.rhn.domain.token.ActivationKey as ak
                   where ak.bootstrap = 'Y']]>
    </query>
</hibernate-mapping>
