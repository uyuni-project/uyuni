<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.redhat.rhn.domain.state.StateRevision" table="suseStateRevision">
        <id name="id" type="long" column="id">
            <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
                <param name="sequence_name">suse_state_revision_id_seq</param>
                <param name="increment_size">1</param>
            </generator>
        </id>
        <set name="packageStates" lazy="true" inverse="true" cascade="all">
            <key column="state_revision_id"/>
            <one-to-many class="com.redhat.rhn.domain.state.PackageState"/>
        </set>

        <list name="configChannels" lazy="true" table="suseStateRevisionConfigChannel"
              cascade="save-update" where="(position > 0)"
              collection-type="com.redhat.rhn.common.hibernate.ForceRecreationListType">
            <key column="state_revision_id"/>
            <list-index column="position" base="1"/>
            <many-to-many
                    class="com.redhat.rhn.domain.config.ConfigChannel"
                    column="config_channel_id"/>
        </list>

        <property name="created" column="created" type="timestamp" insert="false" update="false"/>
        <many-to-one name="creator" column="creator_id" class="com.redhat.rhn.domain.user.legacy.UserImpl" lazy="proxy"/>

        <joined-subclass name="com.redhat.rhn.domain.state.ServerStateRevision" table="suseServerStateRevision">
            <key column="state_revision_id"/>
            <many-to-one name="server" column="server_id" class="com.redhat.rhn.domain.server.Server"/>
        </joined-subclass>

        <joined-subclass name="com.redhat.rhn.domain.state.ServerGroupStateRevision" table="suseServerGroupStateRevision">
            <key column="state_revision_id"/>
            <many-to-one name="group" column="group_id" class="com.redhat.rhn.domain.server.ServerGroup"/>
        </joined-subclass>

        <joined-subclass name="com.redhat.rhn.domain.state.OrgStateRevision" table="suseOrgStateRevision">
            <key column="state_revision_id"/>
            <many-to-one name="org" column="org_id" class="com.redhat.rhn.domain.org.Org"/>
        </joined-subclass>

    </class>
    <query name="StateRevision.deleteAll">
        <![CDATA[delete from com.redhat.rhn.domain.state.StateRevision]]>
    </query>

    <sql-query name="StateRevision.findChannelUsage">
        <return-scalar column="state_revision_id" type="long"/>
        <return-scalar column="server_id" type="long"/>
        <return-scalar column="group_id" type="long"/>
        <return-scalar column="org_id" type="long"/>
        select srcc.state_revision_id as state_revision_id, srvrev.entity_id as server_id, grprev.entity_id as group_id, orgrev.entity_id as org_id
        from
        rhnconfigchannel cc
        inner join suseStateRevisionConfigChannel srcc on cc.id=srcc.config_channel_id
        left join (
        select ssr.state_revision_id as state_revision_id, ssr.server_id as entity_id
        from suseServerStateRevision ssr
        where ssr.state_revision_id=(
        select max(ssrmax.state_revision_id) from suseServerStateRevision ssrmax
        where ssrmax.server_id=ssr.server_id
        )
        ) srvrev on srvrev.state_revision_id=srcc.state_revision_id
        left join (
        select sgsr.state_revision_id as state_revision_id, sgsr.group_id as entity_id
        from suseServerGroupStateRevision sgsr
        where sgsr.state_revision_id=(
        select max(sgsrmax.state_revision_id) from suseServerGroupStateRevision sgsrmax
        where sgsrmax.group_id=sgsr.group_id
        )
        ) grprev on grprev.state_revision_id=srcc.state_revision_id
        left join (
        select osr.state_revision_id as state_revision_id, osr.org_id as entity_id
        from suseOrgStateRevision osr
        where osr.state_revision_id=(
        select max(osrmax.state_revision_id) from suseOrgStateRevision osrmax
        where osrmax.org_id=osr.org_id
        )
        ) orgrev on orgrev.state_revision_id=srcc.state_revision_id

        where cc.org_id= :orgId and cc.id = :channelId
        and (srvrev.entity_id is not null or grprev.entity_id is not null or orgrev.entity_id is not null)
    </sql-query>

    <sql-query name="StateRevision.findGroupsAssignedToChannel">
        <return-scalar column="group_id" type="long"/>
        select latest.group_id
          from (
                select max(gsr.state_revision_id) state_revision_id, gsr.group_id
                  from suseServerGroupStateRevision gsr
              group by gsr.group_id) latest
          join susestaterevisionconfigchannel cc on latest.state_revision_id = cc.state_revision_id
         where cc.config_channel_id = :channelId
    </sql-query>
</hibernate-mapping>
