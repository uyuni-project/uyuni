# Makefile for the backend directory
#

SPACEWALK_FILES = __init__
CODE_DIRS = common server upload_server satellite_tools satellite_exporter po wsgi
CONF_DIRS = apache-conf rhn-conf logrotate

# We look for config files in "well known" locations (rhn-conf,
# httpd-conf, logrotate)
EXTRA_DIRS = /var/log/rhn /var/log/rhn/reposync /var/cache/rhn

# Docker tests variables
DOCKER_CONTAINER = ix64smc161.qa.suse.de/manager_python_testing_pgsql_head
DOCKER_RUN_EXPORT = "PYTHONPATH=/manager/client/rhel/rhnlib/:/manager/suseRegisterInfo:/manager/client/rhel/rhn-client-tools/src"
DOCKER_VOLUMES = -v "$(CURDIR)/../:/manager" -v "$(CURDIR):/usr/lib64/python/site-packages/spacewalk"


all :: all-code all-conf

%-code : Makefile.backend
	@$(foreach d,$(CODE_DIRS), $(MAKE) -C $(d) $* || exit 1; )

%-conf : Makefile.backend
	@$(foreach d,$(CONF_DIRS), $(MAKE) -C $(d) $* || exit 1; )

# now include some Macros
include Makefile.defs

install :: install-code install-conf

clean :: clean-code clean-conf

test    ::
	$(MAKE) -C common/test/unit-test
	$(MAKE) -C server/test/unit-test

unittest ::
	unit2 discover -s satellite_tools/test/unit
	unit2 discover -s common/test/unit-test

docker_no_db_tests ::
	mkdir -p $(CURDIR)/reports
	echo "Running satellite_tools/test/unit tests inside of docker manager_python_testing container"
	docker run -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_CONTAINER) nosetests --with-xunit --xunit-file /manager/backend/reports/satellite_tools_tests.xml -s /manager/backend/satellite_tools/test/unit/
	echo "Running common/test/unit-test inside of docker manager_python_testing container"
	docker run -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_CONTAINER) nosetests --with-xunit --xunit-file /manager/backend/reports/common_tests.xml -s /manager/backend/common/test/unit-test/

docker_pgsql_tests ::
	mkdir -p $(CURDIR)/reports
	echo "Running Postgresql tests inside of docker manager_python_testing container"
	docker run -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_CONTAINER) sh -c "/etc/init.d/postgresql start; nosetests --with-xunit --xunit-file /manager/backend/reports/pgsql_tests.xml /manager/backend/test/runtests-postgresql.py"


docker_pylint ::
	mkdir -p $(CURDIR)/reports
	echo "Running pylint inside of docker manager_python_testing container"
	docker run -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_CONTAINER) /bin/sh -c "cd /manager/backend; pylint -e --enable-msg-cat=imports --disable-msg=E0203,E0611,E1101,E1102 --ignore=test --output-format=parseable --reports=y $(CODE_DIRS) > /manager/backend/reports/pylint.log"

docker_jenkins :: docker_no_db_tests docker_pgsql_tests docker_pylint

docker_shell ::
	docker run -t -i -e $(DOCKER_RUN_EXPORT) $(DOCKER_VOLUMES) $(DOCKER_CONTAINER) /bin/bash

pylint  ::
# :E0611: *No name %r in module %r*
# :E1101: *%s %r has no %r member*
# :E1102: *%s is not callable*
# :E0203: *Access to member %r before its definition line %s*
# ignore the test/ directory because it is full of brokenness that we don't use
	pylint -e --enable-msg-cat=imports --disable-msg=E0203,E0611,E1101,E1102 --ignore=test $(CODE_DIRS) || pylint --errors-only --enable=imports --disable=W,E0203,E0611,E1101,E1102 --ignore=test $(CODE_DIRS)
